// Code generated by ent, DO NOT EDIT.

package processevent

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/workflow-engine/workflow-engine/internal/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldID, id))
}

// EventType applies equality check predicate on the "event_type" field. It's identical to EventTypeEQ.
func EventType(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldEventType, v))
}

// EventName applies equality check predicate on the "event_name" field. It's identical to EventNameEQ.
func EventName(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldEventName, v))
}

// ExecutionID applies equality check predicate on the "execution_id" field. It's identical to ExecutionIDEQ.
func ExecutionID(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldExecutionID, v))
}

// ProcessInstanceID applies equality check predicate on the "process_instance_id" field. It's identical to ProcessInstanceIDEQ.
func ProcessInstanceID(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldProcessInstanceID, v))
}

// ProcessDefinitionID applies equality check predicate on the "process_definition_id" field. It's identical to ProcessDefinitionIDEQ.
func ProcessDefinitionID(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionKey applies equality check predicate on the "process_definition_key" field. It's identical to ProcessDefinitionKeyEQ.
func ProcessDefinitionKey(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// TaskID applies equality check predicate on the "task_id" field. It's identical to TaskIDEQ.
func TaskID(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldTaskID, v))
}

// ActivityID applies equality check predicate on the "activity_id" field. It's identical to ActivityIDEQ.
func ActivityID(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldActivityID, v))
}

// ActivityName applies equality check predicate on the "activity_name" field. It's identical to ActivityNameEQ.
func ActivityName(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldActivityName, v))
}

// ActivityType applies equality check predicate on the "activity_type" field. It's identical to ActivityTypeEQ.
func ActivityType(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldActivityType, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldUserID, v))
}

// Timestamp applies equality check predicate on the "timestamp" field. It's identical to TimestampEQ.
func Timestamp(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldTimestamp, v))
}

// CorrelationID applies equality check predicate on the "correlation_id" field. It's identical to CorrelationIDEQ.
func CorrelationID(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldCorrelationID, v))
}

// MessageName applies equality check predicate on the "message_name" field. It's identical to MessageNameEQ.
func MessageName(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldMessageName, v))
}

// SignalName applies equality check predicate on the "signal_name" field. It's identical to SignalNameEQ.
func SignalName(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldSignalName, v))
}

// JobID applies equality check predicate on the "job_id" field. It's identical to JobIDEQ.
func JobID(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldJobID, v))
}

// JobType applies equality check predicate on the "job_type" field. It's identical to JobTypeEQ.
func JobType(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldJobType, v))
}

// JobHandlerType applies equality check predicate on the "job_handler_type" field. It's identical to JobHandlerTypeEQ.
func JobHandlerType(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldJobHandlerType, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldTenantID, v))
}

// DeploymentID applies equality check predicate on the "deployment_id" field. It's identical to DeploymentIDEQ.
func DeploymentID(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldDeploymentID, v))
}

// SequenceCounter applies equality check predicate on the "sequence_counter" field. It's identical to SequenceCounterEQ.
func SequenceCounter(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldSequenceCounter, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldCreatedAt, v))
}

// EventTypeEQ applies the EQ predicate on the "event_type" field.
func EventTypeEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldEventType, v))
}

// EventTypeNEQ applies the NEQ predicate on the "event_type" field.
func EventTypeNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldEventType, v))
}

// EventTypeIn applies the In predicate on the "event_type" field.
func EventTypeIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldEventType, vs...))
}

// EventTypeNotIn applies the NotIn predicate on the "event_type" field.
func EventTypeNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldEventType, vs...))
}

// EventTypeGT applies the GT predicate on the "event_type" field.
func EventTypeGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldEventType, v))
}

// EventTypeGTE applies the GTE predicate on the "event_type" field.
func EventTypeGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldEventType, v))
}

// EventTypeLT applies the LT predicate on the "event_type" field.
func EventTypeLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldEventType, v))
}

// EventTypeLTE applies the LTE predicate on the "event_type" field.
func EventTypeLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldEventType, v))
}

// EventTypeContains applies the Contains predicate on the "event_type" field.
func EventTypeContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldEventType, v))
}

// EventTypeHasPrefix applies the HasPrefix predicate on the "event_type" field.
func EventTypeHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldEventType, v))
}

// EventTypeHasSuffix applies the HasSuffix predicate on the "event_type" field.
func EventTypeHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldEventType, v))
}

// EventTypeEqualFold applies the EqualFold predicate on the "event_type" field.
func EventTypeEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldEventType, v))
}

// EventTypeContainsFold applies the ContainsFold predicate on the "event_type" field.
func EventTypeContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldEventType, v))
}

// EventNameEQ applies the EQ predicate on the "event_name" field.
func EventNameEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldEventName, v))
}

// EventNameNEQ applies the NEQ predicate on the "event_name" field.
func EventNameNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldEventName, v))
}

// EventNameIn applies the In predicate on the "event_name" field.
func EventNameIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldEventName, vs...))
}

// EventNameNotIn applies the NotIn predicate on the "event_name" field.
func EventNameNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldEventName, vs...))
}

// EventNameGT applies the GT predicate on the "event_name" field.
func EventNameGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldEventName, v))
}

// EventNameGTE applies the GTE predicate on the "event_name" field.
func EventNameGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldEventName, v))
}

// EventNameLT applies the LT predicate on the "event_name" field.
func EventNameLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldEventName, v))
}

// EventNameLTE applies the LTE predicate on the "event_name" field.
func EventNameLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldEventName, v))
}

// EventNameContains applies the Contains predicate on the "event_name" field.
func EventNameContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldEventName, v))
}

// EventNameHasPrefix applies the HasPrefix predicate on the "event_name" field.
func EventNameHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldEventName, v))
}

// EventNameHasSuffix applies the HasSuffix predicate on the "event_name" field.
func EventNameHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldEventName, v))
}

// EventNameIsNil applies the IsNil predicate on the "event_name" field.
func EventNameIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldEventName))
}

// EventNameNotNil applies the NotNil predicate on the "event_name" field.
func EventNameNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldEventName))
}

// EventNameEqualFold applies the EqualFold predicate on the "event_name" field.
func EventNameEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldEventName, v))
}

// EventNameContainsFold applies the ContainsFold predicate on the "event_name" field.
func EventNameContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldEventName, v))
}

// ExecutionIDEQ applies the EQ predicate on the "execution_id" field.
func ExecutionIDEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldExecutionID, v))
}

// ExecutionIDNEQ applies the NEQ predicate on the "execution_id" field.
func ExecutionIDNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldExecutionID, v))
}

// ExecutionIDIn applies the In predicate on the "execution_id" field.
func ExecutionIDIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldExecutionID, vs...))
}

// ExecutionIDNotIn applies the NotIn predicate on the "execution_id" field.
func ExecutionIDNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldExecutionID, vs...))
}

// ExecutionIDGT applies the GT predicate on the "execution_id" field.
func ExecutionIDGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldExecutionID, v))
}

// ExecutionIDGTE applies the GTE predicate on the "execution_id" field.
func ExecutionIDGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldExecutionID, v))
}

// ExecutionIDLT applies the LT predicate on the "execution_id" field.
func ExecutionIDLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldExecutionID, v))
}

// ExecutionIDLTE applies the LTE predicate on the "execution_id" field.
func ExecutionIDLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldExecutionID, v))
}

// ExecutionIDContains applies the Contains predicate on the "execution_id" field.
func ExecutionIDContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldExecutionID, v))
}

// ExecutionIDHasPrefix applies the HasPrefix predicate on the "execution_id" field.
func ExecutionIDHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldExecutionID, v))
}

// ExecutionIDHasSuffix applies the HasSuffix predicate on the "execution_id" field.
func ExecutionIDHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldExecutionID, v))
}

// ExecutionIDIsNil applies the IsNil predicate on the "execution_id" field.
func ExecutionIDIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldExecutionID))
}

// ExecutionIDNotNil applies the NotNil predicate on the "execution_id" field.
func ExecutionIDNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldExecutionID))
}

// ExecutionIDEqualFold applies the EqualFold predicate on the "execution_id" field.
func ExecutionIDEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldExecutionID, v))
}

// ExecutionIDContainsFold applies the ContainsFold predicate on the "execution_id" field.
func ExecutionIDContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldExecutionID, v))
}

// ProcessInstanceIDEQ applies the EQ predicate on the "process_instance_id" field.
func ProcessInstanceIDEQ(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDNEQ applies the NEQ predicate on the "process_instance_id" field.
func ProcessInstanceIDNEQ(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDIn applies the In predicate on the "process_instance_id" field.
func ProcessInstanceIDIn(vs ...int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDNotIn applies the NotIn predicate on the "process_instance_id" field.
func ProcessInstanceIDNotIn(vs ...int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDGT applies the GT predicate on the "process_instance_id" field.
func ProcessInstanceIDGT(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDGTE applies the GTE predicate on the "process_instance_id" field.
func ProcessInstanceIDGTE(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLT applies the LT predicate on the "process_instance_id" field.
func ProcessInstanceIDLT(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLTE applies the LTE predicate on the "process_instance_id" field.
func ProcessInstanceIDLTE(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDIsNil applies the IsNil predicate on the "process_instance_id" field.
func ProcessInstanceIDIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldProcessInstanceID))
}

// ProcessInstanceIDNotNil applies the NotNil predicate on the "process_instance_id" field.
func ProcessInstanceIDNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldProcessInstanceID))
}

// ProcessDefinitionIDEQ applies the EQ predicate on the "process_definition_id" field.
func ProcessDefinitionIDEQ(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDNEQ applies the NEQ predicate on the "process_definition_id" field.
func ProcessDefinitionIDNEQ(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDIn applies the In predicate on the "process_definition_id" field.
func ProcessDefinitionIDIn(vs ...int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldProcessDefinitionID, vs...))
}

// ProcessDefinitionIDNotIn applies the NotIn predicate on the "process_definition_id" field.
func ProcessDefinitionIDNotIn(vs ...int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldProcessDefinitionID, vs...))
}

// ProcessDefinitionIDGT applies the GT predicate on the "process_definition_id" field.
func ProcessDefinitionIDGT(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDGTE applies the GTE predicate on the "process_definition_id" field.
func ProcessDefinitionIDGTE(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDLT applies the LT predicate on the "process_definition_id" field.
func ProcessDefinitionIDLT(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDLTE applies the LTE predicate on the "process_definition_id" field.
func ProcessDefinitionIDLTE(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDIsNil applies the IsNil predicate on the "process_definition_id" field.
func ProcessDefinitionIDIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldProcessDefinitionID))
}

// ProcessDefinitionIDNotNil applies the NotNil predicate on the "process_definition_id" field.
func ProcessDefinitionIDNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldProcessDefinitionID))
}

// ProcessDefinitionKeyEQ applies the EQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyNEQ applies the NEQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyIn applies the In predicate on the "process_definition_key" field.
func ProcessDefinitionKeyIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyNotIn applies the NotIn predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyGT applies the GT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyGTE applies the GTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLT applies the LT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLTE applies the LTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContains applies the Contains predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasPrefix applies the HasPrefix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasSuffix applies the HasSuffix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyIsNil applies the IsNil predicate on the "process_definition_key" field.
func ProcessDefinitionKeyIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldProcessDefinitionKey))
}

// ProcessDefinitionKeyNotNil applies the NotNil predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldProcessDefinitionKey))
}

// ProcessDefinitionKeyEqualFold applies the EqualFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContainsFold applies the ContainsFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldProcessDefinitionKey, v))
}

// TaskIDEQ applies the EQ predicate on the "task_id" field.
func TaskIDEQ(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldTaskID, v))
}

// TaskIDNEQ applies the NEQ predicate on the "task_id" field.
func TaskIDNEQ(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldTaskID, v))
}

// TaskIDIn applies the In predicate on the "task_id" field.
func TaskIDIn(vs ...int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldTaskID, vs...))
}

// TaskIDNotIn applies the NotIn predicate on the "task_id" field.
func TaskIDNotIn(vs ...int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldTaskID, vs...))
}

// TaskIDGT applies the GT predicate on the "task_id" field.
func TaskIDGT(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldTaskID, v))
}

// TaskIDGTE applies the GTE predicate on the "task_id" field.
func TaskIDGTE(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldTaskID, v))
}

// TaskIDLT applies the LT predicate on the "task_id" field.
func TaskIDLT(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldTaskID, v))
}

// TaskIDLTE applies the LTE predicate on the "task_id" field.
func TaskIDLTE(v int64) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldTaskID, v))
}

// TaskIDIsNil applies the IsNil predicate on the "task_id" field.
func TaskIDIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldTaskID))
}

// TaskIDNotNil applies the NotNil predicate on the "task_id" field.
func TaskIDNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldTaskID))
}

// ActivityIDEQ applies the EQ predicate on the "activity_id" field.
func ActivityIDEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldActivityID, v))
}

// ActivityIDNEQ applies the NEQ predicate on the "activity_id" field.
func ActivityIDNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldActivityID, v))
}

// ActivityIDIn applies the In predicate on the "activity_id" field.
func ActivityIDIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldActivityID, vs...))
}

// ActivityIDNotIn applies the NotIn predicate on the "activity_id" field.
func ActivityIDNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldActivityID, vs...))
}

// ActivityIDGT applies the GT predicate on the "activity_id" field.
func ActivityIDGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldActivityID, v))
}

// ActivityIDGTE applies the GTE predicate on the "activity_id" field.
func ActivityIDGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldActivityID, v))
}

// ActivityIDLT applies the LT predicate on the "activity_id" field.
func ActivityIDLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldActivityID, v))
}

// ActivityIDLTE applies the LTE predicate on the "activity_id" field.
func ActivityIDLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldActivityID, v))
}

// ActivityIDContains applies the Contains predicate on the "activity_id" field.
func ActivityIDContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldActivityID, v))
}

// ActivityIDHasPrefix applies the HasPrefix predicate on the "activity_id" field.
func ActivityIDHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldActivityID, v))
}

// ActivityIDHasSuffix applies the HasSuffix predicate on the "activity_id" field.
func ActivityIDHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldActivityID, v))
}

// ActivityIDIsNil applies the IsNil predicate on the "activity_id" field.
func ActivityIDIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldActivityID))
}

// ActivityIDNotNil applies the NotNil predicate on the "activity_id" field.
func ActivityIDNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldActivityID))
}

// ActivityIDEqualFold applies the EqualFold predicate on the "activity_id" field.
func ActivityIDEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldActivityID, v))
}

// ActivityIDContainsFold applies the ContainsFold predicate on the "activity_id" field.
func ActivityIDContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldActivityID, v))
}

// ActivityNameEQ applies the EQ predicate on the "activity_name" field.
func ActivityNameEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldActivityName, v))
}

// ActivityNameNEQ applies the NEQ predicate on the "activity_name" field.
func ActivityNameNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldActivityName, v))
}

// ActivityNameIn applies the In predicate on the "activity_name" field.
func ActivityNameIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldActivityName, vs...))
}

// ActivityNameNotIn applies the NotIn predicate on the "activity_name" field.
func ActivityNameNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldActivityName, vs...))
}

// ActivityNameGT applies the GT predicate on the "activity_name" field.
func ActivityNameGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldActivityName, v))
}

// ActivityNameGTE applies the GTE predicate on the "activity_name" field.
func ActivityNameGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldActivityName, v))
}

// ActivityNameLT applies the LT predicate on the "activity_name" field.
func ActivityNameLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldActivityName, v))
}

// ActivityNameLTE applies the LTE predicate on the "activity_name" field.
func ActivityNameLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldActivityName, v))
}

// ActivityNameContains applies the Contains predicate on the "activity_name" field.
func ActivityNameContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldActivityName, v))
}

// ActivityNameHasPrefix applies the HasPrefix predicate on the "activity_name" field.
func ActivityNameHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldActivityName, v))
}

// ActivityNameHasSuffix applies the HasSuffix predicate on the "activity_name" field.
func ActivityNameHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldActivityName, v))
}

// ActivityNameIsNil applies the IsNil predicate on the "activity_name" field.
func ActivityNameIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldActivityName))
}

// ActivityNameNotNil applies the NotNil predicate on the "activity_name" field.
func ActivityNameNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldActivityName))
}

// ActivityNameEqualFold applies the EqualFold predicate on the "activity_name" field.
func ActivityNameEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldActivityName, v))
}

// ActivityNameContainsFold applies the ContainsFold predicate on the "activity_name" field.
func ActivityNameContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldActivityName, v))
}

// ActivityTypeEQ applies the EQ predicate on the "activity_type" field.
func ActivityTypeEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldActivityType, v))
}

// ActivityTypeNEQ applies the NEQ predicate on the "activity_type" field.
func ActivityTypeNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldActivityType, v))
}

// ActivityTypeIn applies the In predicate on the "activity_type" field.
func ActivityTypeIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldActivityType, vs...))
}

// ActivityTypeNotIn applies the NotIn predicate on the "activity_type" field.
func ActivityTypeNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldActivityType, vs...))
}

// ActivityTypeGT applies the GT predicate on the "activity_type" field.
func ActivityTypeGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldActivityType, v))
}

// ActivityTypeGTE applies the GTE predicate on the "activity_type" field.
func ActivityTypeGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldActivityType, v))
}

// ActivityTypeLT applies the LT predicate on the "activity_type" field.
func ActivityTypeLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldActivityType, v))
}

// ActivityTypeLTE applies the LTE predicate on the "activity_type" field.
func ActivityTypeLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldActivityType, v))
}

// ActivityTypeContains applies the Contains predicate on the "activity_type" field.
func ActivityTypeContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldActivityType, v))
}

// ActivityTypeHasPrefix applies the HasPrefix predicate on the "activity_type" field.
func ActivityTypeHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldActivityType, v))
}

// ActivityTypeHasSuffix applies the HasSuffix predicate on the "activity_type" field.
func ActivityTypeHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldActivityType, v))
}

// ActivityTypeIsNil applies the IsNil predicate on the "activity_type" field.
func ActivityTypeIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldActivityType))
}

// ActivityTypeNotNil applies the NotNil predicate on the "activity_type" field.
func ActivityTypeNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldActivityType))
}

// ActivityTypeEqualFold applies the EqualFold predicate on the "activity_type" field.
func ActivityTypeEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldActivityType, v))
}

// ActivityTypeContainsFold applies the ContainsFold predicate on the "activity_type" field.
func ActivityTypeContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldActivityType, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldUserID))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldUserID, v))
}

// TimestampEQ applies the EQ predicate on the "timestamp" field.
func TimestampEQ(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldTimestamp, v))
}

// TimestampNEQ applies the NEQ predicate on the "timestamp" field.
func TimestampNEQ(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldTimestamp, v))
}

// TimestampIn applies the In predicate on the "timestamp" field.
func TimestampIn(vs ...time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldTimestamp, vs...))
}

// TimestampNotIn applies the NotIn predicate on the "timestamp" field.
func TimestampNotIn(vs ...time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldTimestamp, vs...))
}

// TimestampGT applies the GT predicate on the "timestamp" field.
func TimestampGT(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldTimestamp, v))
}

// TimestampGTE applies the GTE predicate on the "timestamp" field.
func TimestampGTE(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldTimestamp, v))
}

// TimestampLT applies the LT predicate on the "timestamp" field.
func TimestampLT(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldTimestamp, v))
}

// TimestampLTE applies the LTE predicate on the "timestamp" field.
func TimestampLTE(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldTimestamp, v))
}

// EventDataIsNil applies the IsNil predicate on the "event_data" field.
func EventDataIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldEventData))
}

// EventDataNotNil applies the NotNil predicate on the "event_data" field.
func EventDataNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldEventData))
}

// CorrelationIDEQ applies the EQ predicate on the "correlation_id" field.
func CorrelationIDEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldCorrelationID, v))
}

// CorrelationIDNEQ applies the NEQ predicate on the "correlation_id" field.
func CorrelationIDNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldCorrelationID, v))
}

// CorrelationIDIn applies the In predicate on the "correlation_id" field.
func CorrelationIDIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldCorrelationID, vs...))
}

// CorrelationIDNotIn applies the NotIn predicate on the "correlation_id" field.
func CorrelationIDNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldCorrelationID, vs...))
}

// CorrelationIDGT applies the GT predicate on the "correlation_id" field.
func CorrelationIDGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldCorrelationID, v))
}

// CorrelationIDGTE applies the GTE predicate on the "correlation_id" field.
func CorrelationIDGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldCorrelationID, v))
}

// CorrelationIDLT applies the LT predicate on the "correlation_id" field.
func CorrelationIDLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldCorrelationID, v))
}

// CorrelationIDLTE applies the LTE predicate on the "correlation_id" field.
func CorrelationIDLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldCorrelationID, v))
}

// CorrelationIDContains applies the Contains predicate on the "correlation_id" field.
func CorrelationIDContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldCorrelationID, v))
}

// CorrelationIDHasPrefix applies the HasPrefix predicate on the "correlation_id" field.
func CorrelationIDHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldCorrelationID, v))
}

// CorrelationIDHasSuffix applies the HasSuffix predicate on the "correlation_id" field.
func CorrelationIDHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldCorrelationID, v))
}

// CorrelationIDIsNil applies the IsNil predicate on the "correlation_id" field.
func CorrelationIDIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldCorrelationID))
}

// CorrelationIDNotNil applies the NotNil predicate on the "correlation_id" field.
func CorrelationIDNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldCorrelationID))
}

// CorrelationIDEqualFold applies the EqualFold predicate on the "correlation_id" field.
func CorrelationIDEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldCorrelationID, v))
}

// CorrelationIDContainsFold applies the ContainsFold predicate on the "correlation_id" field.
func CorrelationIDContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldCorrelationID, v))
}

// MessageNameEQ applies the EQ predicate on the "message_name" field.
func MessageNameEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldMessageName, v))
}

// MessageNameNEQ applies the NEQ predicate on the "message_name" field.
func MessageNameNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldMessageName, v))
}

// MessageNameIn applies the In predicate on the "message_name" field.
func MessageNameIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldMessageName, vs...))
}

// MessageNameNotIn applies the NotIn predicate on the "message_name" field.
func MessageNameNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldMessageName, vs...))
}

// MessageNameGT applies the GT predicate on the "message_name" field.
func MessageNameGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldMessageName, v))
}

// MessageNameGTE applies the GTE predicate on the "message_name" field.
func MessageNameGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldMessageName, v))
}

// MessageNameLT applies the LT predicate on the "message_name" field.
func MessageNameLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldMessageName, v))
}

// MessageNameLTE applies the LTE predicate on the "message_name" field.
func MessageNameLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldMessageName, v))
}

// MessageNameContains applies the Contains predicate on the "message_name" field.
func MessageNameContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldMessageName, v))
}

// MessageNameHasPrefix applies the HasPrefix predicate on the "message_name" field.
func MessageNameHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldMessageName, v))
}

// MessageNameHasSuffix applies the HasSuffix predicate on the "message_name" field.
func MessageNameHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldMessageName, v))
}

// MessageNameIsNil applies the IsNil predicate on the "message_name" field.
func MessageNameIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldMessageName))
}

// MessageNameNotNil applies the NotNil predicate on the "message_name" field.
func MessageNameNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldMessageName))
}

// MessageNameEqualFold applies the EqualFold predicate on the "message_name" field.
func MessageNameEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldMessageName, v))
}

// MessageNameContainsFold applies the ContainsFold predicate on the "message_name" field.
func MessageNameContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldMessageName, v))
}

// SignalNameEQ applies the EQ predicate on the "signal_name" field.
func SignalNameEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldSignalName, v))
}

// SignalNameNEQ applies the NEQ predicate on the "signal_name" field.
func SignalNameNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldSignalName, v))
}

// SignalNameIn applies the In predicate on the "signal_name" field.
func SignalNameIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldSignalName, vs...))
}

// SignalNameNotIn applies the NotIn predicate on the "signal_name" field.
func SignalNameNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldSignalName, vs...))
}

// SignalNameGT applies the GT predicate on the "signal_name" field.
func SignalNameGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldSignalName, v))
}

// SignalNameGTE applies the GTE predicate on the "signal_name" field.
func SignalNameGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldSignalName, v))
}

// SignalNameLT applies the LT predicate on the "signal_name" field.
func SignalNameLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldSignalName, v))
}

// SignalNameLTE applies the LTE predicate on the "signal_name" field.
func SignalNameLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldSignalName, v))
}

// SignalNameContains applies the Contains predicate on the "signal_name" field.
func SignalNameContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldSignalName, v))
}

// SignalNameHasPrefix applies the HasPrefix predicate on the "signal_name" field.
func SignalNameHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldSignalName, v))
}

// SignalNameHasSuffix applies the HasSuffix predicate on the "signal_name" field.
func SignalNameHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldSignalName, v))
}

// SignalNameIsNil applies the IsNil predicate on the "signal_name" field.
func SignalNameIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldSignalName))
}

// SignalNameNotNil applies the NotNil predicate on the "signal_name" field.
func SignalNameNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldSignalName))
}

// SignalNameEqualFold applies the EqualFold predicate on the "signal_name" field.
func SignalNameEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldSignalName, v))
}

// SignalNameContainsFold applies the ContainsFold predicate on the "signal_name" field.
func SignalNameContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldSignalName, v))
}

// JobIDEQ applies the EQ predicate on the "job_id" field.
func JobIDEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldJobID, v))
}

// JobIDNEQ applies the NEQ predicate on the "job_id" field.
func JobIDNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldJobID, v))
}

// JobIDIn applies the In predicate on the "job_id" field.
func JobIDIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldJobID, vs...))
}

// JobIDNotIn applies the NotIn predicate on the "job_id" field.
func JobIDNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldJobID, vs...))
}

// JobIDGT applies the GT predicate on the "job_id" field.
func JobIDGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldJobID, v))
}

// JobIDGTE applies the GTE predicate on the "job_id" field.
func JobIDGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldJobID, v))
}

// JobIDLT applies the LT predicate on the "job_id" field.
func JobIDLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldJobID, v))
}

// JobIDLTE applies the LTE predicate on the "job_id" field.
func JobIDLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldJobID, v))
}

// JobIDContains applies the Contains predicate on the "job_id" field.
func JobIDContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldJobID, v))
}

// JobIDHasPrefix applies the HasPrefix predicate on the "job_id" field.
func JobIDHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldJobID, v))
}

// JobIDHasSuffix applies the HasSuffix predicate on the "job_id" field.
func JobIDHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldJobID, v))
}

// JobIDIsNil applies the IsNil predicate on the "job_id" field.
func JobIDIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldJobID))
}

// JobIDNotNil applies the NotNil predicate on the "job_id" field.
func JobIDNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldJobID))
}

// JobIDEqualFold applies the EqualFold predicate on the "job_id" field.
func JobIDEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldJobID, v))
}

// JobIDContainsFold applies the ContainsFold predicate on the "job_id" field.
func JobIDContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldJobID, v))
}

// JobTypeEQ applies the EQ predicate on the "job_type" field.
func JobTypeEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldJobType, v))
}

// JobTypeNEQ applies the NEQ predicate on the "job_type" field.
func JobTypeNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldJobType, v))
}

// JobTypeIn applies the In predicate on the "job_type" field.
func JobTypeIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldJobType, vs...))
}

// JobTypeNotIn applies the NotIn predicate on the "job_type" field.
func JobTypeNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldJobType, vs...))
}

// JobTypeGT applies the GT predicate on the "job_type" field.
func JobTypeGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldJobType, v))
}

// JobTypeGTE applies the GTE predicate on the "job_type" field.
func JobTypeGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldJobType, v))
}

// JobTypeLT applies the LT predicate on the "job_type" field.
func JobTypeLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldJobType, v))
}

// JobTypeLTE applies the LTE predicate on the "job_type" field.
func JobTypeLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldJobType, v))
}

// JobTypeContains applies the Contains predicate on the "job_type" field.
func JobTypeContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldJobType, v))
}

// JobTypeHasPrefix applies the HasPrefix predicate on the "job_type" field.
func JobTypeHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldJobType, v))
}

// JobTypeHasSuffix applies the HasSuffix predicate on the "job_type" field.
func JobTypeHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldJobType, v))
}

// JobTypeIsNil applies the IsNil predicate on the "job_type" field.
func JobTypeIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldJobType))
}

// JobTypeNotNil applies the NotNil predicate on the "job_type" field.
func JobTypeNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldJobType))
}

// JobTypeEqualFold applies the EqualFold predicate on the "job_type" field.
func JobTypeEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldJobType, v))
}

// JobTypeContainsFold applies the ContainsFold predicate on the "job_type" field.
func JobTypeContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldJobType, v))
}

// JobHandlerTypeEQ applies the EQ predicate on the "job_handler_type" field.
func JobHandlerTypeEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldJobHandlerType, v))
}

// JobHandlerTypeNEQ applies the NEQ predicate on the "job_handler_type" field.
func JobHandlerTypeNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldJobHandlerType, v))
}

// JobHandlerTypeIn applies the In predicate on the "job_handler_type" field.
func JobHandlerTypeIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldJobHandlerType, vs...))
}

// JobHandlerTypeNotIn applies the NotIn predicate on the "job_handler_type" field.
func JobHandlerTypeNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldJobHandlerType, vs...))
}

// JobHandlerTypeGT applies the GT predicate on the "job_handler_type" field.
func JobHandlerTypeGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldJobHandlerType, v))
}

// JobHandlerTypeGTE applies the GTE predicate on the "job_handler_type" field.
func JobHandlerTypeGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldJobHandlerType, v))
}

// JobHandlerTypeLT applies the LT predicate on the "job_handler_type" field.
func JobHandlerTypeLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldJobHandlerType, v))
}

// JobHandlerTypeLTE applies the LTE predicate on the "job_handler_type" field.
func JobHandlerTypeLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldJobHandlerType, v))
}

// JobHandlerTypeContains applies the Contains predicate on the "job_handler_type" field.
func JobHandlerTypeContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldJobHandlerType, v))
}

// JobHandlerTypeHasPrefix applies the HasPrefix predicate on the "job_handler_type" field.
func JobHandlerTypeHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldJobHandlerType, v))
}

// JobHandlerTypeHasSuffix applies the HasSuffix predicate on the "job_handler_type" field.
func JobHandlerTypeHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldJobHandlerType, v))
}

// JobHandlerTypeIsNil applies the IsNil predicate on the "job_handler_type" field.
func JobHandlerTypeIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldJobHandlerType))
}

// JobHandlerTypeNotNil applies the NotNil predicate on the "job_handler_type" field.
func JobHandlerTypeNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldJobHandlerType))
}

// JobHandlerTypeEqualFold applies the EqualFold predicate on the "job_handler_type" field.
func JobHandlerTypeEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldJobHandlerType, v))
}

// JobHandlerTypeContainsFold applies the ContainsFold predicate on the "job_handler_type" field.
func JobHandlerTypeContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldJobHandlerType, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldTenantID, v))
}

// DeploymentIDEQ applies the EQ predicate on the "deployment_id" field.
func DeploymentIDEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldDeploymentID, v))
}

// DeploymentIDNEQ applies the NEQ predicate on the "deployment_id" field.
func DeploymentIDNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldDeploymentID, v))
}

// DeploymentIDIn applies the In predicate on the "deployment_id" field.
func DeploymentIDIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldDeploymentID, vs...))
}

// DeploymentIDNotIn applies the NotIn predicate on the "deployment_id" field.
func DeploymentIDNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldDeploymentID, vs...))
}

// DeploymentIDGT applies the GT predicate on the "deployment_id" field.
func DeploymentIDGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldDeploymentID, v))
}

// DeploymentIDGTE applies the GTE predicate on the "deployment_id" field.
func DeploymentIDGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldDeploymentID, v))
}

// DeploymentIDLT applies the LT predicate on the "deployment_id" field.
func DeploymentIDLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldDeploymentID, v))
}

// DeploymentIDLTE applies the LTE predicate on the "deployment_id" field.
func DeploymentIDLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldDeploymentID, v))
}

// DeploymentIDContains applies the Contains predicate on the "deployment_id" field.
func DeploymentIDContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldDeploymentID, v))
}

// DeploymentIDHasPrefix applies the HasPrefix predicate on the "deployment_id" field.
func DeploymentIDHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldDeploymentID, v))
}

// DeploymentIDHasSuffix applies the HasSuffix predicate on the "deployment_id" field.
func DeploymentIDHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldDeploymentID, v))
}

// DeploymentIDIsNil applies the IsNil predicate on the "deployment_id" field.
func DeploymentIDIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldDeploymentID))
}

// DeploymentIDNotNil applies the NotNil predicate on the "deployment_id" field.
func DeploymentIDNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldDeploymentID))
}

// DeploymentIDEqualFold applies the EqualFold predicate on the "deployment_id" field.
func DeploymentIDEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldDeploymentID, v))
}

// DeploymentIDContainsFold applies the ContainsFold predicate on the "deployment_id" field.
func DeploymentIDContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldDeploymentID, v))
}

// SequenceCounterEQ applies the EQ predicate on the "sequence_counter" field.
func SequenceCounterEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldSequenceCounter, v))
}

// SequenceCounterNEQ applies the NEQ predicate on the "sequence_counter" field.
func SequenceCounterNEQ(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldSequenceCounter, v))
}

// SequenceCounterIn applies the In predicate on the "sequence_counter" field.
func SequenceCounterIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldSequenceCounter, vs...))
}

// SequenceCounterNotIn applies the NotIn predicate on the "sequence_counter" field.
func SequenceCounterNotIn(vs ...string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldSequenceCounter, vs...))
}

// SequenceCounterGT applies the GT predicate on the "sequence_counter" field.
func SequenceCounterGT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldSequenceCounter, v))
}

// SequenceCounterGTE applies the GTE predicate on the "sequence_counter" field.
func SequenceCounterGTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldSequenceCounter, v))
}

// SequenceCounterLT applies the LT predicate on the "sequence_counter" field.
func SequenceCounterLT(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldSequenceCounter, v))
}

// SequenceCounterLTE applies the LTE predicate on the "sequence_counter" field.
func SequenceCounterLTE(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldSequenceCounter, v))
}

// SequenceCounterContains applies the Contains predicate on the "sequence_counter" field.
func SequenceCounterContains(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContains(FieldSequenceCounter, v))
}

// SequenceCounterHasPrefix applies the HasPrefix predicate on the "sequence_counter" field.
func SequenceCounterHasPrefix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasPrefix(FieldSequenceCounter, v))
}

// SequenceCounterHasSuffix applies the HasSuffix predicate on the "sequence_counter" field.
func SequenceCounterHasSuffix(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldHasSuffix(FieldSequenceCounter, v))
}

// SequenceCounterIsNil applies the IsNil predicate on the "sequence_counter" field.
func SequenceCounterIsNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIsNull(FieldSequenceCounter))
}

// SequenceCounterNotNil applies the NotNil predicate on the "sequence_counter" field.
func SequenceCounterNotNil() predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotNull(FieldSequenceCounter))
}

// SequenceCounterEqualFold applies the EqualFold predicate on the "sequence_counter" field.
func SequenceCounterEqualFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEqualFold(FieldSequenceCounter, v))
}

// SequenceCounterContainsFold applies the ContainsFold predicate on the "sequence_counter" field.
func SequenceCounterContainsFold(v string) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldContainsFold(FieldSequenceCounter, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProcessEvent) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProcessEvent) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProcessEvent) predicate.ProcessEvent {
	return predicate.ProcessEvent(sql.NotPredicates(p))
}

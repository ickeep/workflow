// Code generated by ent, DO NOT EDIT.

package historicprocessinstance

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/workflow-engine/workflow-engine/internal/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldID, id))
}

// ProcessInstanceID applies equality check predicate on the "process_instance_id" field. It's identical to ProcessInstanceIDEQ.
func ProcessInstanceID(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldProcessInstanceID, v))
}

// BusinessKey applies equality check predicate on the "business_key" field. It's identical to BusinessKeyEQ.
func BusinessKey(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldBusinessKey, v))
}

// ProcessDefinitionID applies equality check predicate on the "process_definition_id" field. It's identical to ProcessDefinitionIDEQ.
func ProcessDefinitionID(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionKey applies equality check predicate on the "process_definition_key" field. It's identical to ProcessDefinitionKeyEQ.
func ProcessDefinitionKey(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionName applies equality check predicate on the "process_definition_name" field. It's identical to ProcessDefinitionNameEQ.
func ProcessDefinitionName(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldProcessDefinitionName, v))
}

// ProcessDefinitionVersion applies equality check predicate on the "process_definition_version" field. It's identical to ProcessDefinitionVersionEQ.
func ProcessDefinitionVersion(v int32) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldProcessDefinitionVersion, v))
}

// DeploymentID applies equality check predicate on the "deployment_id" field. It's identical to DeploymentIDEQ.
func DeploymentID(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldDeploymentID, v))
}

// StartUserID applies equality check predicate on the "start_user_id" field. It's identical to StartUserIDEQ.
func StartUserID(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldStartUserID, v))
}

// StartTime applies equality check predicate on the "start_time" field. It's identical to StartTimeEQ.
func StartTime(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldStartTime, v))
}

// EndTime applies equality check predicate on the "end_time" field. It's identical to EndTimeEQ.
func EndTime(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldEndTime, v))
}

// Duration applies equality check predicate on the "duration" field. It's identical to DurationEQ.
func Duration(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldDuration, v))
}

// StartActivityID applies equality check predicate on the "start_activity_id" field. It's identical to StartActivityIDEQ.
func StartActivityID(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldStartActivityID, v))
}

// EndActivityID applies equality check predicate on the "end_activity_id" field. It's identical to EndActivityIDEQ.
func EndActivityID(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldEndActivityID, v))
}

// SuperProcessInstanceID applies equality check predicate on the "super_process_instance_id" field. It's identical to SuperProcessInstanceIDEQ.
func SuperProcessInstanceID(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldSuperProcessInstanceID, v))
}

// RootProcessInstanceID applies equality check predicate on the "root_process_instance_id" field. It's identical to RootProcessInstanceIDEQ.
func RootProcessInstanceID(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldRootProcessInstanceID, v))
}

// SuperCaseInstanceID applies equality check predicate on the "super_case_instance_id" field. It's identical to SuperCaseInstanceIDEQ.
func SuperCaseInstanceID(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldSuperCaseInstanceID, v))
}

// CaseInstanceID applies equality check predicate on the "case_instance_id" field. It's identical to CaseInstanceIDEQ.
func CaseInstanceID(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldCaseInstanceID, v))
}

// DeleteReason applies equality check predicate on the "delete_reason" field. It's identical to DeleteReasonEQ.
func DeleteReason(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldDeleteReason, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldTenantID, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldState, v))
}

// RemovalTime applies equality check predicate on the "removal_time" field. It's identical to RemovalTimeEQ.
func RemovalTime(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldRemovalTime, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldUpdatedAt, v))
}

// ProcessInstanceIDEQ applies the EQ predicate on the "process_instance_id" field.
func ProcessInstanceIDEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDNEQ applies the NEQ predicate on the "process_instance_id" field.
func ProcessInstanceIDNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDIn applies the In predicate on the "process_instance_id" field.
func ProcessInstanceIDIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDNotIn applies the NotIn predicate on the "process_instance_id" field.
func ProcessInstanceIDNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDGT applies the GT predicate on the "process_instance_id" field.
func ProcessInstanceIDGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDGTE applies the GTE predicate on the "process_instance_id" field.
func ProcessInstanceIDGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLT applies the LT predicate on the "process_instance_id" field.
func ProcessInstanceIDLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLTE applies the LTE predicate on the "process_instance_id" field.
func ProcessInstanceIDLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDContains applies the Contains predicate on the "process_instance_id" field.
func ProcessInstanceIDContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldProcessInstanceID, v))
}

// ProcessInstanceIDHasPrefix applies the HasPrefix predicate on the "process_instance_id" field.
func ProcessInstanceIDHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldProcessInstanceID, v))
}

// ProcessInstanceIDHasSuffix applies the HasSuffix predicate on the "process_instance_id" field.
func ProcessInstanceIDHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldProcessInstanceID, v))
}

// ProcessInstanceIDEqualFold applies the EqualFold predicate on the "process_instance_id" field.
func ProcessInstanceIDEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldProcessInstanceID, v))
}

// ProcessInstanceIDContainsFold applies the ContainsFold predicate on the "process_instance_id" field.
func ProcessInstanceIDContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldProcessInstanceID, v))
}

// BusinessKeyEQ applies the EQ predicate on the "business_key" field.
func BusinessKeyEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldBusinessKey, v))
}

// BusinessKeyNEQ applies the NEQ predicate on the "business_key" field.
func BusinessKeyNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldBusinessKey, v))
}

// BusinessKeyIn applies the In predicate on the "business_key" field.
func BusinessKeyIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldBusinessKey, vs...))
}

// BusinessKeyNotIn applies the NotIn predicate on the "business_key" field.
func BusinessKeyNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldBusinessKey, vs...))
}

// BusinessKeyGT applies the GT predicate on the "business_key" field.
func BusinessKeyGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldBusinessKey, v))
}

// BusinessKeyGTE applies the GTE predicate on the "business_key" field.
func BusinessKeyGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldBusinessKey, v))
}

// BusinessKeyLT applies the LT predicate on the "business_key" field.
func BusinessKeyLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldBusinessKey, v))
}

// BusinessKeyLTE applies the LTE predicate on the "business_key" field.
func BusinessKeyLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldBusinessKey, v))
}

// BusinessKeyContains applies the Contains predicate on the "business_key" field.
func BusinessKeyContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldBusinessKey, v))
}

// BusinessKeyHasPrefix applies the HasPrefix predicate on the "business_key" field.
func BusinessKeyHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldBusinessKey, v))
}

// BusinessKeyHasSuffix applies the HasSuffix predicate on the "business_key" field.
func BusinessKeyHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldBusinessKey, v))
}

// BusinessKeyIsNil applies the IsNil predicate on the "business_key" field.
func BusinessKeyIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldBusinessKey))
}

// BusinessKeyNotNil applies the NotNil predicate on the "business_key" field.
func BusinessKeyNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldBusinessKey))
}

// BusinessKeyEqualFold applies the EqualFold predicate on the "business_key" field.
func BusinessKeyEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldBusinessKey, v))
}

// BusinessKeyContainsFold applies the ContainsFold predicate on the "business_key" field.
func BusinessKeyContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldBusinessKey, v))
}

// ProcessDefinitionIDEQ applies the EQ predicate on the "process_definition_id" field.
func ProcessDefinitionIDEQ(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDNEQ applies the NEQ predicate on the "process_definition_id" field.
func ProcessDefinitionIDNEQ(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDIn applies the In predicate on the "process_definition_id" field.
func ProcessDefinitionIDIn(vs ...int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldProcessDefinitionID, vs...))
}

// ProcessDefinitionIDNotIn applies the NotIn predicate on the "process_definition_id" field.
func ProcessDefinitionIDNotIn(vs ...int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldProcessDefinitionID, vs...))
}

// ProcessDefinitionIDGT applies the GT predicate on the "process_definition_id" field.
func ProcessDefinitionIDGT(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDGTE applies the GTE predicate on the "process_definition_id" field.
func ProcessDefinitionIDGTE(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDLT applies the LT predicate on the "process_definition_id" field.
func ProcessDefinitionIDLT(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDLTE applies the LTE predicate on the "process_definition_id" field.
func ProcessDefinitionIDLTE(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldProcessDefinitionID, v))
}

// ProcessDefinitionKeyEQ applies the EQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyNEQ applies the NEQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyIn applies the In predicate on the "process_definition_key" field.
func ProcessDefinitionKeyIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyNotIn applies the NotIn predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyGT applies the GT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyGTE applies the GTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLT applies the LT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLTE applies the LTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContains applies the Contains predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasPrefix applies the HasPrefix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasSuffix applies the HasSuffix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyEqualFold applies the EqualFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContainsFold applies the ContainsFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionNameEQ applies the EQ predicate on the "process_definition_name" field.
func ProcessDefinitionNameEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameNEQ applies the NEQ predicate on the "process_definition_name" field.
func ProcessDefinitionNameNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameIn applies the In predicate on the "process_definition_name" field.
func ProcessDefinitionNameIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldProcessDefinitionName, vs...))
}

// ProcessDefinitionNameNotIn applies the NotIn predicate on the "process_definition_name" field.
func ProcessDefinitionNameNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldProcessDefinitionName, vs...))
}

// ProcessDefinitionNameGT applies the GT predicate on the "process_definition_name" field.
func ProcessDefinitionNameGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameGTE applies the GTE predicate on the "process_definition_name" field.
func ProcessDefinitionNameGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameLT applies the LT predicate on the "process_definition_name" field.
func ProcessDefinitionNameLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameLTE applies the LTE predicate on the "process_definition_name" field.
func ProcessDefinitionNameLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameContains applies the Contains predicate on the "process_definition_name" field.
func ProcessDefinitionNameContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameHasPrefix applies the HasPrefix predicate on the "process_definition_name" field.
func ProcessDefinitionNameHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameHasSuffix applies the HasSuffix predicate on the "process_definition_name" field.
func ProcessDefinitionNameHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameIsNil applies the IsNil predicate on the "process_definition_name" field.
func ProcessDefinitionNameIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldProcessDefinitionName))
}

// ProcessDefinitionNameNotNil applies the NotNil predicate on the "process_definition_name" field.
func ProcessDefinitionNameNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldProcessDefinitionName))
}

// ProcessDefinitionNameEqualFold applies the EqualFold predicate on the "process_definition_name" field.
func ProcessDefinitionNameEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameContainsFold applies the ContainsFold predicate on the "process_definition_name" field.
func ProcessDefinitionNameContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldProcessDefinitionName, v))
}

// ProcessDefinitionVersionEQ applies the EQ predicate on the "process_definition_version" field.
func ProcessDefinitionVersionEQ(v int32) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldProcessDefinitionVersion, v))
}

// ProcessDefinitionVersionNEQ applies the NEQ predicate on the "process_definition_version" field.
func ProcessDefinitionVersionNEQ(v int32) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldProcessDefinitionVersion, v))
}

// ProcessDefinitionVersionIn applies the In predicate on the "process_definition_version" field.
func ProcessDefinitionVersionIn(vs ...int32) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldProcessDefinitionVersion, vs...))
}

// ProcessDefinitionVersionNotIn applies the NotIn predicate on the "process_definition_version" field.
func ProcessDefinitionVersionNotIn(vs ...int32) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldProcessDefinitionVersion, vs...))
}

// ProcessDefinitionVersionGT applies the GT predicate on the "process_definition_version" field.
func ProcessDefinitionVersionGT(v int32) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldProcessDefinitionVersion, v))
}

// ProcessDefinitionVersionGTE applies the GTE predicate on the "process_definition_version" field.
func ProcessDefinitionVersionGTE(v int32) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldProcessDefinitionVersion, v))
}

// ProcessDefinitionVersionLT applies the LT predicate on the "process_definition_version" field.
func ProcessDefinitionVersionLT(v int32) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldProcessDefinitionVersion, v))
}

// ProcessDefinitionVersionLTE applies the LTE predicate on the "process_definition_version" field.
func ProcessDefinitionVersionLTE(v int32) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldProcessDefinitionVersion, v))
}

// DeploymentIDEQ applies the EQ predicate on the "deployment_id" field.
func DeploymentIDEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldDeploymentID, v))
}

// DeploymentIDNEQ applies the NEQ predicate on the "deployment_id" field.
func DeploymentIDNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldDeploymentID, v))
}

// DeploymentIDIn applies the In predicate on the "deployment_id" field.
func DeploymentIDIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldDeploymentID, vs...))
}

// DeploymentIDNotIn applies the NotIn predicate on the "deployment_id" field.
func DeploymentIDNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldDeploymentID, vs...))
}

// DeploymentIDGT applies the GT predicate on the "deployment_id" field.
func DeploymentIDGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldDeploymentID, v))
}

// DeploymentIDGTE applies the GTE predicate on the "deployment_id" field.
func DeploymentIDGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldDeploymentID, v))
}

// DeploymentIDLT applies the LT predicate on the "deployment_id" field.
func DeploymentIDLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldDeploymentID, v))
}

// DeploymentIDLTE applies the LTE predicate on the "deployment_id" field.
func DeploymentIDLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldDeploymentID, v))
}

// DeploymentIDContains applies the Contains predicate on the "deployment_id" field.
func DeploymentIDContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldDeploymentID, v))
}

// DeploymentIDHasPrefix applies the HasPrefix predicate on the "deployment_id" field.
func DeploymentIDHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldDeploymentID, v))
}

// DeploymentIDHasSuffix applies the HasSuffix predicate on the "deployment_id" field.
func DeploymentIDHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldDeploymentID, v))
}

// DeploymentIDIsNil applies the IsNil predicate on the "deployment_id" field.
func DeploymentIDIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldDeploymentID))
}

// DeploymentIDNotNil applies the NotNil predicate on the "deployment_id" field.
func DeploymentIDNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldDeploymentID))
}

// DeploymentIDEqualFold applies the EqualFold predicate on the "deployment_id" field.
func DeploymentIDEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldDeploymentID, v))
}

// DeploymentIDContainsFold applies the ContainsFold predicate on the "deployment_id" field.
func DeploymentIDContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldDeploymentID, v))
}

// StartUserIDEQ applies the EQ predicate on the "start_user_id" field.
func StartUserIDEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldStartUserID, v))
}

// StartUserIDNEQ applies the NEQ predicate on the "start_user_id" field.
func StartUserIDNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldStartUserID, v))
}

// StartUserIDIn applies the In predicate on the "start_user_id" field.
func StartUserIDIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldStartUserID, vs...))
}

// StartUserIDNotIn applies the NotIn predicate on the "start_user_id" field.
func StartUserIDNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldStartUserID, vs...))
}

// StartUserIDGT applies the GT predicate on the "start_user_id" field.
func StartUserIDGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldStartUserID, v))
}

// StartUserIDGTE applies the GTE predicate on the "start_user_id" field.
func StartUserIDGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldStartUserID, v))
}

// StartUserIDLT applies the LT predicate on the "start_user_id" field.
func StartUserIDLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldStartUserID, v))
}

// StartUserIDLTE applies the LTE predicate on the "start_user_id" field.
func StartUserIDLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldStartUserID, v))
}

// StartUserIDContains applies the Contains predicate on the "start_user_id" field.
func StartUserIDContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldStartUserID, v))
}

// StartUserIDHasPrefix applies the HasPrefix predicate on the "start_user_id" field.
func StartUserIDHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldStartUserID, v))
}

// StartUserIDHasSuffix applies the HasSuffix predicate on the "start_user_id" field.
func StartUserIDHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldStartUserID, v))
}

// StartUserIDIsNil applies the IsNil predicate on the "start_user_id" field.
func StartUserIDIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldStartUserID))
}

// StartUserIDNotNil applies the NotNil predicate on the "start_user_id" field.
func StartUserIDNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldStartUserID))
}

// StartUserIDEqualFold applies the EqualFold predicate on the "start_user_id" field.
func StartUserIDEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldStartUserID, v))
}

// StartUserIDContainsFold applies the ContainsFold predicate on the "start_user_id" field.
func StartUserIDContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldStartUserID, v))
}

// StartTimeEQ applies the EQ predicate on the "start_time" field.
func StartTimeEQ(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldStartTime, v))
}

// StartTimeNEQ applies the NEQ predicate on the "start_time" field.
func StartTimeNEQ(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldStartTime, v))
}

// StartTimeIn applies the In predicate on the "start_time" field.
func StartTimeIn(vs ...time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldStartTime, vs...))
}

// StartTimeNotIn applies the NotIn predicate on the "start_time" field.
func StartTimeNotIn(vs ...time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldStartTime, vs...))
}

// StartTimeGT applies the GT predicate on the "start_time" field.
func StartTimeGT(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldStartTime, v))
}

// StartTimeGTE applies the GTE predicate on the "start_time" field.
func StartTimeGTE(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldStartTime, v))
}

// StartTimeLT applies the LT predicate on the "start_time" field.
func StartTimeLT(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldStartTime, v))
}

// StartTimeLTE applies the LTE predicate on the "start_time" field.
func StartTimeLTE(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldStartTime, v))
}

// EndTimeEQ applies the EQ predicate on the "end_time" field.
func EndTimeEQ(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldEndTime, v))
}

// EndTimeNEQ applies the NEQ predicate on the "end_time" field.
func EndTimeNEQ(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldEndTime, v))
}

// EndTimeIn applies the In predicate on the "end_time" field.
func EndTimeIn(vs ...time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldEndTime, vs...))
}

// EndTimeNotIn applies the NotIn predicate on the "end_time" field.
func EndTimeNotIn(vs ...time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldEndTime, vs...))
}

// EndTimeGT applies the GT predicate on the "end_time" field.
func EndTimeGT(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldEndTime, v))
}

// EndTimeGTE applies the GTE predicate on the "end_time" field.
func EndTimeGTE(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldEndTime, v))
}

// EndTimeLT applies the LT predicate on the "end_time" field.
func EndTimeLT(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldEndTime, v))
}

// EndTimeLTE applies the LTE predicate on the "end_time" field.
func EndTimeLTE(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldEndTime, v))
}

// EndTimeIsNil applies the IsNil predicate on the "end_time" field.
func EndTimeIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldEndTime))
}

// EndTimeNotNil applies the NotNil predicate on the "end_time" field.
func EndTimeNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldEndTime))
}

// DurationEQ applies the EQ predicate on the "duration" field.
func DurationEQ(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldDuration, v))
}

// DurationNEQ applies the NEQ predicate on the "duration" field.
func DurationNEQ(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldDuration, v))
}

// DurationIn applies the In predicate on the "duration" field.
func DurationIn(vs ...int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldDuration, vs...))
}

// DurationNotIn applies the NotIn predicate on the "duration" field.
func DurationNotIn(vs ...int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldDuration, vs...))
}

// DurationGT applies the GT predicate on the "duration" field.
func DurationGT(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldDuration, v))
}

// DurationGTE applies the GTE predicate on the "duration" field.
func DurationGTE(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldDuration, v))
}

// DurationLT applies the LT predicate on the "duration" field.
func DurationLT(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldDuration, v))
}

// DurationLTE applies the LTE predicate on the "duration" field.
func DurationLTE(v int64) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldDuration, v))
}

// DurationIsNil applies the IsNil predicate on the "duration" field.
func DurationIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldDuration))
}

// DurationNotNil applies the NotNil predicate on the "duration" field.
func DurationNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldDuration))
}

// StartActivityIDEQ applies the EQ predicate on the "start_activity_id" field.
func StartActivityIDEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldStartActivityID, v))
}

// StartActivityIDNEQ applies the NEQ predicate on the "start_activity_id" field.
func StartActivityIDNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldStartActivityID, v))
}

// StartActivityIDIn applies the In predicate on the "start_activity_id" field.
func StartActivityIDIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldStartActivityID, vs...))
}

// StartActivityIDNotIn applies the NotIn predicate on the "start_activity_id" field.
func StartActivityIDNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldStartActivityID, vs...))
}

// StartActivityIDGT applies the GT predicate on the "start_activity_id" field.
func StartActivityIDGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldStartActivityID, v))
}

// StartActivityIDGTE applies the GTE predicate on the "start_activity_id" field.
func StartActivityIDGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldStartActivityID, v))
}

// StartActivityIDLT applies the LT predicate on the "start_activity_id" field.
func StartActivityIDLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldStartActivityID, v))
}

// StartActivityIDLTE applies the LTE predicate on the "start_activity_id" field.
func StartActivityIDLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldStartActivityID, v))
}

// StartActivityIDContains applies the Contains predicate on the "start_activity_id" field.
func StartActivityIDContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldStartActivityID, v))
}

// StartActivityIDHasPrefix applies the HasPrefix predicate on the "start_activity_id" field.
func StartActivityIDHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldStartActivityID, v))
}

// StartActivityIDHasSuffix applies the HasSuffix predicate on the "start_activity_id" field.
func StartActivityIDHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldStartActivityID, v))
}

// StartActivityIDIsNil applies the IsNil predicate on the "start_activity_id" field.
func StartActivityIDIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldStartActivityID))
}

// StartActivityIDNotNil applies the NotNil predicate on the "start_activity_id" field.
func StartActivityIDNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldStartActivityID))
}

// StartActivityIDEqualFold applies the EqualFold predicate on the "start_activity_id" field.
func StartActivityIDEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldStartActivityID, v))
}

// StartActivityIDContainsFold applies the ContainsFold predicate on the "start_activity_id" field.
func StartActivityIDContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldStartActivityID, v))
}

// EndActivityIDEQ applies the EQ predicate on the "end_activity_id" field.
func EndActivityIDEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldEndActivityID, v))
}

// EndActivityIDNEQ applies the NEQ predicate on the "end_activity_id" field.
func EndActivityIDNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldEndActivityID, v))
}

// EndActivityIDIn applies the In predicate on the "end_activity_id" field.
func EndActivityIDIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldEndActivityID, vs...))
}

// EndActivityIDNotIn applies the NotIn predicate on the "end_activity_id" field.
func EndActivityIDNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldEndActivityID, vs...))
}

// EndActivityIDGT applies the GT predicate on the "end_activity_id" field.
func EndActivityIDGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldEndActivityID, v))
}

// EndActivityIDGTE applies the GTE predicate on the "end_activity_id" field.
func EndActivityIDGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldEndActivityID, v))
}

// EndActivityIDLT applies the LT predicate on the "end_activity_id" field.
func EndActivityIDLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldEndActivityID, v))
}

// EndActivityIDLTE applies the LTE predicate on the "end_activity_id" field.
func EndActivityIDLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldEndActivityID, v))
}

// EndActivityIDContains applies the Contains predicate on the "end_activity_id" field.
func EndActivityIDContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldEndActivityID, v))
}

// EndActivityIDHasPrefix applies the HasPrefix predicate on the "end_activity_id" field.
func EndActivityIDHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldEndActivityID, v))
}

// EndActivityIDHasSuffix applies the HasSuffix predicate on the "end_activity_id" field.
func EndActivityIDHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldEndActivityID, v))
}

// EndActivityIDIsNil applies the IsNil predicate on the "end_activity_id" field.
func EndActivityIDIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldEndActivityID))
}

// EndActivityIDNotNil applies the NotNil predicate on the "end_activity_id" field.
func EndActivityIDNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldEndActivityID))
}

// EndActivityIDEqualFold applies the EqualFold predicate on the "end_activity_id" field.
func EndActivityIDEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldEndActivityID, v))
}

// EndActivityIDContainsFold applies the ContainsFold predicate on the "end_activity_id" field.
func EndActivityIDContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldEndActivityID, v))
}

// SuperProcessInstanceIDEQ applies the EQ predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDNEQ applies the NEQ predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDIn applies the In predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldSuperProcessInstanceID, vs...))
}

// SuperProcessInstanceIDNotIn applies the NotIn predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldSuperProcessInstanceID, vs...))
}

// SuperProcessInstanceIDGT applies the GT predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDGTE applies the GTE predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDLT applies the LT predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDLTE applies the LTE predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDContains applies the Contains predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDHasPrefix applies the HasPrefix predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDHasSuffix applies the HasSuffix predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDIsNil applies the IsNil predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldSuperProcessInstanceID))
}

// SuperProcessInstanceIDNotNil applies the NotNil predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldSuperProcessInstanceID))
}

// SuperProcessInstanceIDEqualFold applies the EqualFold predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDContainsFold applies the ContainsFold predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldSuperProcessInstanceID, v))
}

// RootProcessInstanceIDEQ applies the EQ predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDNEQ applies the NEQ predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDIn applies the In predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldRootProcessInstanceID, vs...))
}

// RootProcessInstanceIDNotIn applies the NotIn predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldRootProcessInstanceID, vs...))
}

// RootProcessInstanceIDGT applies the GT predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDGTE applies the GTE predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDLT applies the LT predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDLTE applies the LTE predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDContains applies the Contains predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDHasPrefix applies the HasPrefix predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDHasSuffix applies the HasSuffix predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDIsNil applies the IsNil predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldRootProcessInstanceID))
}

// RootProcessInstanceIDNotNil applies the NotNil predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldRootProcessInstanceID))
}

// RootProcessInstanceIDEqualFold applies the EqualFold predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDContainsFold applies the ContainsFold predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldRootProcessInstanceID, v))
}

// SuperCaseInstanceIDEQ applies the EQ predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldSuperCaseInstanceID, v))
}

// SuperCaseInstanceIDNEQ applies the NEQ predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldSuperCaseInstanceID, v))
}

// SuperCaseInstanceIDIn applies the In predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldSuperCaseInstanceID, vs...))
}

// SuperCaseInstanceIDNotIn applies the NotIn predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldSuperCaseInstanceID, vs...))
}

// SuperCaseInstanceIDGT applies the GT predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldSuperCaseInstanceID, v))
}

// SuperCaseInstanceIDGTE applies the GTE predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldSuperCaseInstanceID, v))
}

// SuperCaseInstanceIDLT applies the LT predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldSuperCaseInstanceID, v))
}

// SuperCaseInstanceIDLTE applies the LTE predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldSuperCaseInstanceID, v))
}

// SuperCaseInstanceIDContains applies the Contains predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldSuperCaseInstanceID, v))
}

// SuperCaseInstanceIDHasPrefix applies the HasPrefix predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldSuperCaseInstanceID, v))
}

// SuperCaseInstanceIDHasSuffix applies the HasSuffix predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldSuperCaseInstanceID, v))
}

// SuperCaseInstanceIDIsNil applies the IsNil predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldSuperCaseInstanceID))
}

// SuperCaseInstanceIDNotNil applies the NotNil predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldSuperCaseInstanceID))
}

// SuperCaseInstanceIDEqualFold applies the EqualFold predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldSuperCaseInstanceID, v))
}

// SuperCaseInstanceIDContainsFold applies the ContainsFold predicate on the "super_case_instance_id" field.
func SuperCaseInstanceIDContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldSuperCaseInstanceID, v))
}

// CaseInstanceIDEQ applies the EQ predicate on the "case_instance_id" field.
func CaseInstanceIDEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldCaseInstanceID, v))
}

// CaseInstanceIDNEQ applies the NEQ predicate on the "case_instance_id" field.
func CaseInstanceIDNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldCaseInstanceID, v))
}

// CaseInstanceIDIn applies the In predicate on the "case_instance_id" field.
func CaseInstanceIDIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldCaseInstanceID, vs...))
}

// CaseInstanceIDNotIn applies the NotIn predicate on the "case_instance_id" field.
func CaseInstanceIDNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldCaseInstanceID, vs...))
}

// CaseInstanceIDGT applies the GT predicate on the "case_instance_id" field.
func CaseInstanceIDGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldCaseInstanceID, v))
}

// CaseInstanceIDGTE applies the GTE predicate on the "case_instance_id" field.
func CaseInstanceIDGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldCaseInstanceID, v))
}

// CaseInstanceIDLT applies the LT predicate on the "case_instance_id" field.
func CaseInstanceIDLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldCaseInstanceID, v))
}

// CaseInstanceIDLTE applies the LTE predicate on the "case_instance_id" field.
func CaseInstanceIDLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldCaseInstanceID, v))
}

// CaseInstanceIDContains applies the Contains predicate on the "case_instance_id" field.
func CaseInstanceIDContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldCaseInstanceID, v))
}

// CaseInstanceIDHasPrefix applies the HasPrefix predicate on the "case_instance_id" field.
func CaseInstanceIDHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldCaseInstanceID, v))
}

// CaseInstanceIDHasSuffix applies the HasSuffix predicate on the "case_instance_id" field.
func CaseInstanceIDHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldCaseInstanceID, v))
}

// CaseInstanceIDIsNil applies the IsNil predicate on the "case_instance_id" field.
func CaseInstanceIDIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldCaseInstanceID))
}

// CaseInstanceIDNotNil applies the NotNil predicate on the "case_instance_id" field.
func CaseInstanceIDNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldCaseInstanceID))
}

// CaseInstanceIDEqualFold applies the EqualFold predicate on the "case_instance_id" field.
func CaseInstanceIDEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldCaseInstanceID, v))
}

// CaseInstanceIDContainsFold applies the ContainsFold predicate on the "case_instance_id" field.
func CaseInstanceIDContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldCaseInstanceID, v))
}

// DeleteReasonEQ applies the EQ predicate on the "delete_reason" field.
func DeleteReasonEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldDeleteReason, v))
}

// DeleteReasonNEQ applies the NEQ predicate on the "delete_reason" field.
func DeleteReasonNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldDeleteReason, v))
}

// DeleteReasonIn applies the In predicate on the "delete_reason" field.
func DeleteReasonIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldDeleteReason, vs...))
}

// DeleteReasonNotIn applies the NotIn predicate on the "delete_reason" field.
func DeleteReasonNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldDeleteReason, vs...))
}

// DeleteReasonGT applies the GT predicate on the "delete_reason" field.
func DeleteReasonGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldDeleteReason, v))
}

// DeleteReasonGTE applies the GTE predicate on the "delete_reason" field.
func DeleteReasonGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldDeleteReason, v))
}

// DeleteReasonLT applies the LT predicate on the "delete_reason" field.
func DeleteReasonLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldDeleteReason, v))
}

// DeleteReasonLTE applies the LTE predicate on the "delete_reason" field.
func DeleteReasonLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldDeleteReason, v))
}

// DeleteReasonContains applies the Contains predicate on the "delete_reason" field.
func DeleteReasonContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldDeleteReason, v))
}

// DeleteReasonHasPrefix applies the HasPrefix predicate on the "delete_reason" field.
func DeleteReasonHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldDeleteReason, v))
}

// DeleteReasonHasSuffix applies the HasSuffix predicate on the "delete_reason" field.
func DeleteReasonHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldDeleteReason, v))
}

// DeleteReasonIsNil applies the IsNil predicate on the "delete_reason" field.
func DeleteReasonIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldDeleteReason))
}

// DeleteReasonNotNil applies the NotNil predicate on the "delete_reason" field.
func DeleteReasonNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldDeleteReason))
}

// DeleteReasonEqualFold applies the EqualFold predicate on the "delete_reason" field.
func DeleteReasonEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldDeleteReason, v))
}

// DeleteReasonContainsFold applies the ContainsFold predicate on the "delete_reason" field.
func DeleteReasonContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldDeleteReason, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldTenantID, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldState, v))
}

// StateContains applies the Contains predicate on the "state" field.
func StateContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldState, v))
}

// StateHasPrefix applies the HasPrefix predicate on the "state" field.
func StateHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldState, v))
}

// StateHasSuffix applies the HasSuffix predicate on the "state" field.
func StateHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldState, v))
}

// StateIsNil applies the IsNil predicate on the "state" field.
func StateIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldState))
}

// StateNotNil applies the NotNil predicate on the "state" field.
func StateNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldState))
}

// StateEqualFold applies the EqualFold predicate on the "state" field.
func StateEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldState, v))
}

// StateContainsFold applies the ContainsFold predicate on the "state" field.
func StateContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldState, v))
}

// RemovalTimeEQ applies the EQ predicate on the "removal_time" field.
func RemovalTimeEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldRemovalTime, v))
}

// RemovalTimeNEQ applies the NEQ predicate on the "removal_time" field.
func RemovalTimeNEQ(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldRemovalTime, v))
}

// RemovalTimeIn applies the In predicate on the "removal_time" field.
func RemovalTimeIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldRemovalTime, vs...))
}

// RemovalTimeNotIn applies the NotIn predicate on the "removal_time" field.
func RemovalTimeNotIn(vs ...string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldRemovalTime, vs...))
}

// RemovalTimeGT applies the GT predicate on the "removal_time" field.
func RemovalTimeGT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldRemovalTime, v))
}

// RemovalTimeGTE applies the GTE predicate on the "removal_time" field.
func RemovalTimeGTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldRemovalTime, v))
}

// RemovalTimeLT applies the LT predicate on the "removal_time" field.
func RemovalTimeLT(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldRemovalTime, v))
}

// RemovalTimeLTE applies the LTE predicate on the "removal_time" field.
func RemovalTimeLTE(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldRemovalTime, v))
}

// RemovalTimeContains applies the Contains predicate on the "removal_time" field.
func RemovalTimeContains(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContains(FieldRemovalTime, v))
}

// RemovalTimeHasPrefix applies the HasPrefix predicate on the "removal_time" field.
func RemovalTimeHasPrefix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasPrefix(FieldRemovalTime, v))
}

// RemovalTimeHasSuffix applies the HasSuffix predicate on the "removal_time" field.
func RemovalTimeHasSuffix(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldHasSuffix(FieldRemovalTime, v))
}

// RemovalTimeIsNil applies the IsNil predicate on the "removal_time" field.
func RemovalTimeIsNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIsNull(FieldRemovalTime))
}

// RemovalTimeNotNil applies the NotNil predicate on the "removal_time" field.
func RemovalTimeNotNil() predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotNull(FieldRemovalTime))
}

// RemovalTimeEqualFold applies the EqualFold predicate on the "removal_time" field.
func RemovalTimeEqualFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEqualFold(FieldRemovalTime, v))
}

// RemovalTimeContainsFold applies the ContainsFold predicate on the "removal_time" field.
func RemovalTimeContainsFold(v string) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldContainsFold(FieldRemovalTime, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.HistoricProcessInstance) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.HistoricProcessInstance) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.HistoricProcessInstance) predicate.HistoricProcessInstance {
	return predicate.HistoricProcessInstance(sql.NotPredicates(p))
}

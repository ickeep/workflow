// Code generated by ent, DO NOT EDIT.

package processvariable

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/workflow-engine/workflow-engine/internal/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldName, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldType, v))
}

// TextValue applies equality check predicate on the "text_value" field. It's identical to TextValueEQ.
func TextValue(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTextValue, v))
}

// TextValue2 applies equality check predicate on the "text_value2" field. It's identical to TextValue2EQ.
func TextValue2(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTextValue2, v))
}

// LongValue applies equality check predicate on the "long_value" field. It's identical to LongValueEQ.
func LongValue(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldLongValue, v))
}

// DoubleValue applies equality check predicate on the "double_value" field. It's identical to DoubleValueEQ.
func DoubleValue(v float64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldDoubleValue, v))
}

// ByteArrayValue applies equality check predicate on the "byte_array_value" field. It's identical to ByteArrayValueEQ.
func ByteArrayValue(v []byte) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldByteArrayValue, v))
}

// ExecutionID applies equality check predicate on the "execution_id" field. It's identical to ExecutionIDEQ.
func ExecutionID(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldExecutionID, v))
}

// ProcessInstanceID applies equality check predicate on the "process_instance_id" field. It's identical to ProcessInstanceIDEQ.
func ProcessInstanceID(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldProcessInstanceID, v))
}

// ProcessDefinitionID applies equality check predicate on the "process_definition_id" field. It's identical to ProcessDefinitionIDEQ.
func ProcessDefinitionID(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldProcessDefinitionID, v))
}

// CaseExecutionID applies equality check predicate on the "case_execution_id" field. It's identical to CaseExecutionIDEQ.
func CaseExecutionID(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldCaseExecutionID, v))
}

// CaseInstanceID applies equality check predicate on the "case_instance_id" field. It's identical to CaseInstanceIDEQ.
func CaseInstanceID(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldCaseInstanceID, v))
}

// TaskID applies equality check predicate on the "task_id" field. It's identical to TaskIDEQ.
func TaskID(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTaskID, v))
}

// ActivityInstanceID applies equality check predicate on the "activity_instance_id" field. It's identical to ActivityInstanceIDEQ.
func ActivityInstanceID(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldActivityInstanceID, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTenantID, v))
}

// SequenceCounter applies equality check predicate on the "sequence_counter" field. It's identical to SequenceCounterEQ.
func SequenceCounter(v int32) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldSequenceCounter, v))
}

// ConcurrentLocal applies equality check predicate on the "concurrent_local" field. It's identical to ConcurrentLocalEQ.
func ConcurrentLocal(v bool) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldConcurrentLocal, v))
}

// ScopeID applies equality check predicate on the "scope_id" field. It's identical to ScopeIDEQ.
func ScopeID(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldScopeID, v))
}

// ScopeType applies equality check predicate on the "scope_type" field. It's identical to ScopeTypeEQ.
func ScopeType(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldScopeType, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldUpdatedAt, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldName, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldType, v))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldType, v))
}

// TextValueEQ applies the EQ predicate on the "text_value" field.
func TextValueEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTextValue, v))
}

// TextValueNEQ applies the NEQ predicate on the "text_value" field.
func TextValueNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldTextValue, v))
}

// TextValueIn applies the In predicate on the "text_value" field.
func TextValueIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldTextValue, vs...))
}

// TextValueNotIn applies the NotIn predicate on the "text_value" field.
func TextValueNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldTextValue, vs...))
}

// TextValueGT applies the GT predicate on the "text_value" field.
func TextValueGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldTextValue, v))
}

// TextValueGTE applies the GTE predicate on the "text_value" field.
func TextValueGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldTextValue, v))
}

// TextValueLT applies the LT predicate on the "text_value" field.
func TextValueLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldTextValue, v))
}

// TextValueLTE applies the LTE predicate on the "text_value" field.
func TextValueLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldTextValue, v))
}

// TextValueContains applies the Contains predicate on the "text_value" field.
func TextValueContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldTextValue, v))
}

// TextValueHasPrefix applies the HasPrefix predicate on the "text_value" field.
func TextValueHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldTextValue, v))
}

// TextValueHasSuffix applies the HasSuffix predicate on the "text_value" field.
func TextValueHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldTextValue, v))
}

// TextValueIsNil applies the IsNil predicate on the "text_value" field.
func TextValueIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldTextValue))
}

// TextValueNotNil applies the NotNil predicate on the "text_value" field.
func TextValueNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldTextValue))
}

// TextValueEqualFold applies the EqualFold predicate on the "text_value" field.
func TextValueEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldTextValue, v))
}

// TextValueContainsFold applies the ContainsFold predicate on the "text_value" field.
func TextValueContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldTextValue, v))
}

// TextValue2EQ applies the EQ predicate on the "text_value2" field.
func TextValue2EQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTextValue2, v))
}

// TextValue2NEQ applies the NEQ predicate on the "text_value2" field.
func TextValue2NEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldTextValue2, v))
}

// TextValue2In applies the In predicate on the "text_value2" field.
func TextValue2In(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldTextValue2, vs...))
}

// TextValue2NotIn applies the NotIn predicate on the "text_value2" field.
func TextValue2NotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldTextValue2, vs...))
}

// TextValue2GT applies the GT predicate on the "text_value2" field.
func TextValue2GT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldTextValue2, v))
}

// TextValue2GTE applies the GTE predicate on the "text_value2" field.
func TextValue2GTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldTextValue2, v))
}

// TextValue2LT applies the LT predicate on the "text_value2" field.
func TextValue2LT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldTextValue2, v))
}

// TextValue2LTE applies the LTE predicate on the "text_value2" field.
func TextValue2LTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldTextValue2, v))
}

// TextValue2Contains applies the Contains predicate on the "text_value2" field.
func TextValue2Contains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldTextValue2, v))
}

// TextValue2HasPrefix applies the HasPrefix predicate on the "text_value2" field.
func TextValue2HasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldTextValue2, v))
}

// TextValue2HasSuffix applies the HasSuffix predicate on the "text_value2" field.
func TextValue2HasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldTextValue2, v))
}

// TextValue2IsNil applies the IsNil predicate on the "text_value2" field.
func TextValue2IsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldTextValue2))
}

// TextValue2NotNil applies the NotNil predicate on the "text_value2" field.
func TextValue2NotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldTextValue2))
}

// TextValue2EqualFold applies the EqualFold predicate on the "text_value2" field.
func TextValue2EqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldTextValue2, v))
}

// TextValue2ContainsFold applies the ContainsFold predicate on the "text_value2" field.
func TextValue2ContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldTextValue2, v))
}

// LongValueEQ applies the EQ predicate on the "long_value" field.
func LongValueEQ(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldLongValue, v))
}

// LongValueNEQ applies the NEQ predicate on the "long_value" field.
func LongValueNEQ(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldLongValue, v))
}

// LongValueIn applies the In predicate on the "long_value" field.
func LongValueIn(vs ...int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldLongValue, vs...))
}

// LongValueNotIn applies the NotIn predicate on the "long_value" field.
func LongValueNotIn(vs ...int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldLongValue, vs...))
}

// LongValueGT applies the GT predicate on the "long_value" field.
func LongValueGT(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldLongValue, v))
}

// LongValueGTE applies the GTE predicate on the "long_value" field.
func LongValueGTE(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldLongValue, v))
}

// LongValueLT applies the LT predicate on the "long_value" field.
func LongValueLT(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldLongValue, v))
}

// LongValueLTE applies the LTE predicate on the "long_value" field.
func LongValueLTE(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldLongValue, v))
}

// LongValueIsNil applies the IsNil predicate on the "long_value" field.
func LongValueIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldLongValue))
}

// LongValueNotNil applies the NotNil predicate on the "long_value" field.
func LongValueNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldLongValue))
}

// DoubleValueEQ applies the EQ predicate on the "double_value" field.
func DoubleValueEQ(v float64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldDoubleValue, v))
}

// DoubleValueNEQ applies the NEQ predicate on the "double_value" field.
func DoubleValueNEQ(v float64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldDoubleValue, v))
}

// DoubleValueIn applies the In predicate on the "double_value" field.
func DoubleValueIn(vs ...float64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldDoubleValue, vs...))
}

// DoubleValueNotIn applies the NotIn predicate on the "double_value" field.
func DoubleValueNotIn(vs ...float64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldDoubleValue, vs...))
}

// DoubleValueGT applies the GT predicate on the "double_value" field.
func DoubleValueGT(v float64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldDoubleValue, v))
}

// DoubleValueGTE applies the GTE predicate on the "double_value" field.
func DoubleValueGTE(v float64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldDoubleValue, v))
}

// DoubleValueLT applies the LT predicate on the "double_value" field.
func DoubleValueLT(v float64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldDoubleValue, v))
}

// DoubleValueLTE applies the LTE predicate on the "double_value" field.
func DoubleValueLTE(v float64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldDoubleValue, v))
}

// DoubleValueIsNil applies the IsNil predicate on the "double_value" field.
func DoubleValueIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldDoubleValue))
}

// DoubleValueNotNil applies the NotNil predicate on the "double_value" field.
func DoubleValueNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldDoubleValue))
}

// ByteArrayValueEQ applies the EQ predicate on the "byte_array_value" field.
func ByteArrayValueEQ(v []byte) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldByteArrayValue, v))
}

// ByteArrayValueNEQ applies the NEQ predicate on the "byte_array_value" field.
func ByteArrayValueNEQ(v []byte) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldByteArrayValue, v))
}

// ByteArrayValueIn applies the In predicate on the "byte_array_value" field.
func ByteArrayValueIn(vs ...[]byte) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldByteArrayValue, vs...))
}

// ByteArrayValueNotIn applies the NotIn predicate on the "byte_array_value" field.
func ByteArrayValueNotIn(vs ...[]byte) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldByteArrayValue, vs...))
}

// ByteArrayValueGT applies the GT predicate on the "byte_array_value" field.
func ByteArrayValueGT(v []byte) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldByteArrayValue, v))
}

// ByteArrayValueGTE applies the GTE predicate on the "byte_array_value" field.
func ByteArrayValueGTE(v []byte) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldByteArrayValue, v))
}

// ByteArrayValueLT applies the LT predicate on the "byte_array_value" field.
func ByteArrayValueLT(v []byte) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldByteArrayValue, v))
}

// ByteArrayValueLTE applies the LTE predicate on the "byte_array_value" field.
func ByteArrayValueLTE(v []byte) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldByteArrayValue, v))
}

// ByteArrayValueIsNil applies the IsNil predicate on the "byte_array_value" field.
func ByteArrayValueIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldByteArrayValue))
}

// ByteArrayValueNotNil applies the NotNil predicate on the "byte_array_value" field.
func ByteArrayValueNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldByteArrayValue))
}

// ExecutionIDEQ applies the EQ predicate on the "execution_id" field.
func ExecutionIDEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldExecutionID, v))
}

// ExecutionIDNEQ applies the NEQ predicate on the "execution_id" field.
func ExecutionIDNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldExecutionID, v))
}

// ExecutionIDIn applies the In predicate on the "execution_id" field.
func ExecutionIDIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldExecutionID, vs...))
}

// ExecutionIDNotIn applies the NotIn predicate on the "execution_id" field.
func ExecutionIDNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldExecutionID, vs...))
}

// ExecutionIDGT applies the GT predicate on the "execution_id" field.
func ExecutionIDGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldExecutionID, v))
}

// ExecutionIDGTE applies the GTE predicate on the "execution_id" field.
func ExecutionIDGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldExecutionID, v))
}

// ExecutionIDLT applies the LT predicate on the "execution_id" field.
func ExecutionIDLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldExecutionID, v))
}

// ExecutionIDLTE applies the LTE predicate on the "execution_id" field.
func ExecutionIDLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldExecutionID, v))
}

// ExecutionIDContains applies the Contains predicate on the "execution_id" field.
func ExecutionIDContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldExecutionID, v))
}

// ExecutionIDHasPrefix applies the HasPrefix predicate on the "execution_id" field.
func ExecutionIDHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldExecutionID, v))
}

// ExecutionIDHasSuffix applies the HasSuffix predicate on the "execution_id" field.
func ExecutionIDHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldExecutionID, v))
}

// ExecutionIDIsNil applies the IsNil predicate on the "execution_id" field.
func ExecutionIDIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldExecutionID))
}

// ExecutionIDNotNil applies the NotNil predicate on the "execution_id" field.
func ExecutionIDNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldExecutionID))
}

// ExecutionIDEqualFold applies the EqualFold predicate on the "execution_id" field.
func ExecutionIDEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldExecutionID, v))
}

// ExecutionIDContainsFold applies the ContainsFold predicate on the "execution_id" field.
func ExecutionIDContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldExecutionID, v))
}

// ProcessInstanceIDEQ applies the EQ predicate on the "process_instance_id" field.
func ProcessInstanceIDEQ(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDNEQ applies the NEQ predicate on the "process_instance_id" field.
func ProcessInstanceIDNEQ(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDIn applies the In predicate on the "process_instance_id" field.
func ProcessInstanceIDIn(vs ...int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDNotIn applies the NotIn predicate on the "process_instance_id" field.
func ProcessInstanceIDNotIn(vs ...int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDGT applies the GT predicate on the "process_instance_id" field.
func ProcessInstanceIDGT(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDGTE applies the GTE predicate on the "process_instance_id" field.
func ProcessInstanceIDGTE(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLT applies the LT predicate on the "process_instance_id" field.
func ProcessInstanceIDLT(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLTE applies the LTE predicate on the "process_instance_id" field.
func ProcessInstanceIDLTE(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDIsNil applies the IsNil predicate on the "process_instance_id" field.
func ProcessInstanceIDIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldProcessInstanceID))
}

// ProcessInstanceIDNotNil applies the NotNil predicate on the "process_instance_id" field.
func ProcessInstanceIDNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldProcessInstanceID))
}

// ProcessDefinitionIDEQ applies the EQ predicate on the "process_definition_id" field.
func ProcessDefinitionIDEQ(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDNEQ applies the NEQ predicate on the "process_definition_id" field.
func ProcessDefinitionIDNEQ(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDIn applies the In predicate on the "process_definition_id" field.
func ProcessDefinitionIDIn(vs ...int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldProcessDefinitionID, vs...))
}

// ProcessDefinitionIDNotIn applies the NotIn predicate on the "process_definition_id" field.
func ProcessDefinitionIDNotIn(vs ...int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldProcessDefinitionID, vs...))
}

// ProcessDefinitionIDGT applies the GT predicate on the "process_definition_id" field.
func ProcessDefinitionIDGT(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDGTE applies the GTE predicate on the "process_definition_id" field.
func ProcessDefinitionIDGTE(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDLT applies the LT predicate on the "process_definition_id" field.
func ProcessDefinitionIDLT(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDLTE applies the LTE predicate on the "process_definition_id" field.
func ProcessDefinitionIDLTE(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDIsNil applies the IsNil predicate on the "process_definition_id" field.
func ProcessDefinitionIDIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldProcessDefinitionID))
}

// ProcessDefinitionIDNotNil applies the NotNil predicate on the "process_definition_id" field.
func ProcessDefinitionIDNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldProcessDefinitionID))
}

// CaseExecutionIDEQ applies the EQ predicate on the "case_execution_id" field.
func CaseExecutionIDEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldCaseExecutionID, v))
}

// CaseExecutionIDNEQ applies the NEQ predicate on the "case_execution_id" field.
func CaseExecutionIDNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldCaseExecutionID, v))
}

// CaseExecutionIDIn applies the In predicate on the "case_execution_id" field.
func CaseExecutionIDIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldCaseExecutionID, vs...))
}

// CaseExecutionIDNotIn applies the NotIn predicate on the "case_execution_id" field.
func CaseExecutionIDNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldCaseExecutionID, vs...))
}

// CaseExecutionIDGT applies the GT predicate on the "case_execution_id" field.
func CaseExecutionIDGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldCaseExecutionID, v))
}

// CaseExecutionIDGTE applies the GTE predicate on the "case_execution_id" field.
func CaseExecutionIDGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldCaseExecutionID, v))
}

// CaseExecutionIDLT applies the LT predicate on the "case_execution_id" field.
func CaseExecutionIDLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldCaseExecutionID, v))
}

// CaseExecutionIDLTE applies the LTE predicate on the "case_execution_id" field.
func CaseExecutionIDLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldCaseExecutionID, v))
}

// CaseExecutionIDContains applies the Contains predicate on the "case_execution_id" field.
func CaseExecutionIDContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldCaseExecutionID, v))
}

// CaseExecutionIDHasPrefix applies the HasPrefix predicate on the "case_execution_id" field.
func CaseExecutionIDHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldCaseExecutionID, v))
}

// CaseExecutionIDHasSuffix applies the HasSuffix predicate on the "case_execution_id" field.
func CaseExecutionIDHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldCaseExecutionID, v))
}

// CaseExecutionIDIsNil applies the IsNil predicate on the "case_execution_id" field.
func CaseExecutionIDIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldCaseExecutionID))
}

// CaseExecutionIDNotNil applies the NotNil predicate on the "case_execution_id" field.
func CaseExecutionIDNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldCaseExecutionID))
}

// CaseExecutionIDEqualFold applies the EqualFold predicate on the "case_execution_id" field.
func CaseExecutionIDEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldCaseExecutionID, v))
}

// CaseExecutionIDContainsFold applies the ContainsFold predicate on the "case_execution_id" field.
func CaseExecutionIDContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldCaseExecutionID, v))
}

// CaseInstanceIDEQ applies the EQ predicate on the "case_instance_id" field.
func CaseInstanceIDEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldCaseInstanceID, v))
}

// CaseInstanceIDNEQ applies the NEQ predicate on the "case_instance_id" field.
func CaseInstanceIDNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldCaseInstanceID, v))
}

// CaseInstanceIDIn applies the In predicate on the "case_instance_id" field.
func CaseInstanceIDIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldCaseInstanceID, vs...))
}

// CaseInstanceIDNotIn applies the NotIn predicate on the "case_instance_id" field.
func CaseInstanceIDNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldCaseInstanceID, vs...))
}

// CaseInstanceIDGT applies the GT predicate on the "case_instance_id" field.
func CaseInstanceIDGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldCaseInstanceID, v))
}

// CaseInstanceIDGTE applies the GTE predicate on the "case_instance_id" field.
func CaseInstanceIDGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldCaseInstanceID, v))
}

// CaseInstanceIDLT applies the LT predicate on the "case_instance_id" field.
func CaseInstanceIDLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldCaseInstanceID, v))
}

// CaseInstanceIDLTE applies the LTE predicate on the "case_instance_id" field.
func CaseInstanceIDLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldCaseInstanceID, v))
}

// CaseInstanceIDContains applies the Contains predicate on the "case_instance_id" field.
func CaseInstanceIDContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldCaseInstanceID, v))
}

// CaseInstanceIDHasPrefix applies the HasPrefix predicate on the "case_instance_id" field.
func CaseInstanceIDHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldCaseInstanceID, v))
}

// CaseInstanceIDHasSuffix applies the HasSuffix predicate on the "case_instance_id" field.
func CaseInstanceIDHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldCaseInstanceID, v))
}

// CaseInstanceIDIsNil applies the IsNil predicate on the "case_instance_id" field.
func CaseInstanceIDIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldCaseInstanceID))
}

// CaseInstanceIDNotNil applies the NotNil predicate on the "case_instance_id" field.
func CaseInstanceIDNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldCaseInstanceID))
}

// CaseInstanceIDEqualFold applies the EqualFold predicate on the "case_instance_id" field.
func CaseInstanceIDEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldCaseInstanceID, v))
}

// CaseInstanceIDContainsFold applies the ContainsFold predicate on the "case_instance_id" field.
func CaseInstanceIDContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldCaseInstanceID, v))
}

// TaskIDEQ applies the EQ predicate on the "task_id" field.
func TaskIDEQ(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTaskID, v))
}

// TaskIDNEQ applies the NEQ predicate on the "task_id" field.
func TaskIDNEQ(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldTaskID, v))
}

// TaskIDIn applies the In predicate on the "task_id" field.
func TaskIDIn(vs ...int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldTaskID, vs...))
}

// TaskIDNotIn applies the NotIn predicate on the "task_id" field.
func TaskIDNotIn(vs ...int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldTaskID, vs...))
}

// TaskIDGT applies the GT predicate on the "task_id" field.
func TaskIDGT(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldTaskID, v))
}

// TaskIDGTE applies the GTE predicate on the "task_id" field.
func TaskIDGTE(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldTaskID, v))
}

// TaskIDLT applies the LT predicate on the "task_id" field.
func TaskIDLT(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldTaskID, v))
}

// TaskIDLTE applies the LTE predicate on the "task_id" field.
func TaskIDLTE(v int64) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldTaskID, v))
}

// TaskIDIsNil applies the IsNil predicate on the "task_id" field.
func TaskIDIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldTaskID))
}

// TaskIDNotNil applies the NotNil predicate on the "task_id" field.
func TaskIDNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldTaskID))
}

// ActivityInstanceIDEQ applies the EQ predicate on the "activity_instance_id" field.
func ActivityInstanceIDEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldActivityInstanceID, v))
}

// ActivityInstanceIDNEQ applies the NEQ predicate on the "activity_instance_id" field.
func ActivityInstanceIDNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldActivityInstanceID, v))
}

// ActivityInstanceIDIn applies the In predicate on the "activity_instance_id" field.
func ActivityInstanceIDIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldActivityInstanceID, vs...))
}

// ActivityInstanceIDNotIn applies the NotIn predicate on the "activity_instance_id" field.
func ActivityInstanceIDNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldActivityInstanceID, vs...))
}

// ActivityInstanceIDGT applies the GT predicate on the "activity_instance_id" field.
func ActivityInstanceIDGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldActivityInstanceID, v))
}

// ActivityInstanceIDGTE applies the GTE predicate on the "activity_instance_id" field.
func ActivityInstanceIDGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldActivityInstanceID, v))
}

// ActivityInstanceIDLT applies the LT predicate on the "activity_instance_id" field.
func ActivityInstanceIDLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldActivityInstanceID, v))
}

// ActivityInstanceIDLTE applies the LTE predicate on the "activity_instance_id" field.
func ActivityInstanceIDLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldActivityInstanceID, v))
}

// ActivityInstanceIDContains applies the Contains predicate on the "activity_instance_id" field.
func ActivityInstanceIDContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldActivityInstanceID, v))
}

// ActivityInstanceIDHasPrefix applies the HasPrefix predicate on the "activity_instance_id" field.
func ActivityInstanceIDHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldActivityInstanceID, v))
}

// ActivityInstanceIDHasSuffix applies the HasSuffix predicate on the "activity_instance_id" field.
func ActivityInstanceIDHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldActivityInstanceID, v))
}

// ActivityInstanceIDIsNil applies the IsNil predicate on the "activity_instance_id" field.
func ActivityInstanceIDIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldActivityInstanceID))
}

// ActivityInstanceIDNotNil applies the NotNil predicate on the "activity_instance_id" field.
func ActivityInstanceIDNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldActivityInstanceID))
}

// ActivityInstanceIDEqualFold applies the EqualFold predicate on the "activity_instance_id" field.
func ActivityInstanceIDEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldActivityInstanceID, v))
}

// ActivityInstanceIDContainsFold applies the ContainsFold predicate on the "activity_instance_id" field.
func ActivityInstanceIDContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldActivityInstanceID, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldTenantID, v))
}

// SequenceCounterEQ applies the EQ predicate on the "sequence_counter" field.
func SequenceCounterEQ(v int32) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldSequenceCounter, v))
}

// SequenceCounterNEQ applies the NEQ predicate on the "sequence_counter" field.
func SequenceCounterNEQ(v int32) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldSequenceCounter, v))
}

// SequenceCounterIn applies the In predicate on the "sequence_counter" field.
func SequenceCounterIn(vs ...int32) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldSequenceCounter, vs...))
}

// SequenceCounterNotIn applies the NotIn predicate on the "sequence_counter" field.
func SequenceCounterNotIn(vs ...int32) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldSequenceCounter, vs...))
}

// SequenceCounterGT applies the GT predicate on the "sequence_counter" field.
func SequenceCounterGT(v int32) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldSequenceCounter, v))
}

// SequenceCounterGTE applies the GTE predicate on the "sequence_counter" field.
func SequenceCounterGTE(v int32) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldSequenceCounter, v))
}

// SequenceCounterLT applies the LT predicate on the "sequence_counter" field.
func SequenceCounterLT(v int32) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldSequenceCounter, v))
}

// SequenceCounterLTE applies the LTE predicate on the "sequence_counter" field.
func SequenceCounterLTE(v int32) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldSequenceCounter, v))
}

// ConcurrentLocalEQ applies the EQ predicate on the "concurrent_local" field.
func ConcurrentLocalEQ(v bool) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldConcurrentLocal, v))
}

// ConcurrentLocalNEQ applies the NEQ predicate on the "concurrent_local" field.
func ConcurrentLocalNEQ(v bool) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldConcurrentLocal, v))
}

// ScopeIDEQ applies the EQ predicate on the "scope_id" field.
func ScopeIDEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldScopeID, v))
}

// ScopeIDNEQ applies the NEQ predicate on the "scope_id" field.
func ScopeIDNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldScopeID, v))
}

// ScopeIDIn applies the In predicate on the "scope_id" field.
func ScopeIDIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldScopeID, vs...))
}

// ScopeIDNotIn applies the NotIn predicate on the "scope_id" field.
func ScopeIDNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldScopeID, vs...))
}

// ScopeIDGT applies the GT predicate on the "scope_id" field.
func ScopeIDGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldScopeID, v))
}

// ScopeIDGTE applies the GTE predicate on the "scope_id" field.
func ScopeIDGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldScopeID, v))
}

// ScopeIDLT applies the LT predicate on the "scope_id" field.
func ScopeIDLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldScopeID, v))
}

// ScopeIDLTE applies the LTE predicate on the "scope_id" field.
func ScopeIDLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldScopeID, v))
}

// ScopeIDContains applies the Contains predicate on the "scope_id" field.
func ScopeIDContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldScopeID, v))
}

// ScopeIDHasPrefix applies the HasPrefix predicate on the "scope_id" field.
func ScopeIDHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldScopeID, v))
}

// ScopeIDHasSuffix applies the HasSuffix predicate on the "scope_id" field.
func ScopeIDHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldScopeID, v))
}

// ScopeIDIsNil applies the IsNil predicate on the "scope_id" field.
func ScopeIDIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldScopeID))
}

// ScopeIDNotNil applies the NotNil predicate on the "scope_id" field.
func ScopeIDNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldScopeID))
}

// ScopeIDEqualFold applies the EqualFold predicate on the "scope_id" field.
func ScopeIDEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldScopeID, v))
}

// ScopeIDContainsFold applies the ContainsFold predicate on the "scope_id" field.
func ScopeIDContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldScopeID, v))
}

// ScopeTypeEQ applies the EQ predicate on the "scope_type" field.
func ScopeTypeEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldScopeType, v))
}

// ScopeTypeNEQ applies the NEQ predicate on the "scope_type" field.
func ScopeTypeNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldScopeType, v))
}

// ScopeTypeIn applies the In predicate on the "scope_type" field.
func ScopeTypeIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldScopeType, vs...))
}

// ScopeTypeNotIn applies the NotIn predicate on the "scope_type" field.
func ScopeTypeNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldScopeType, vs...))
}

// ScopeTypeGT applies the GT predicate on the "scope_type" field.
func ScopeTypeGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldScopeType, v))
}

// ScopeTypeGTE applies the GTE predicate on the "scope_type" field.
func ScopeTypeGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldScopeType, v))
}

// ScopeTypeLT applies the LT predicate on the "scope_type" field.
func ScopeTypeLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldScopeType, v))
}

// ScopeTypeLTE applies the LTE predicate on the "scope_type" field.
func ScopeTypeLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldScopeType, v))
}

// ScopeTypeContains applies the Contains predicate on the "scope_type" field.
func ScopeTypeContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldScopeType, v))
}

// ScopeTypeHasPrefix applies the HasPrefix predicate on the "scope_type" field.
func ScopeTypeHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldScopeType, v))
}

// ScopeTypeHasSuffix applies the HasSuffix predicate on the "scope_type" field.
func ScopeTypeHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldScopeType, v))
}

// ScopeTypeIsNil applies the IsNil predicate on the "scope_type" field.
func ScopeTypeIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldScopeType))
}

// ScopeTypeNotNil applies the NotNil predicate on the "scope_type" field.
func ScopeTypeNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldScopeType))
}

// ScopeTypeEqualFold applies the EqualFold predicate on the "scope_type" field.
func ScopeTypeEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldScopeType, v))
}

// ScopeTypeContainsFold applies the ContainsFold predicate on the "scope_type" field.
func ScopeTypeContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldScopeType, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProcessVariable) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProcessVariable) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProcessVariable) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.NotPredicates(p))
}

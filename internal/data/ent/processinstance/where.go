// Code generated by ent, DO NOT EDIT.

package processinstance

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/workflow-engine/workflow-engine/internal/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldID, id))
}

// BusinessKey applies equality check predicate on the "business_key" field. It's identical to BusinessKeyEQ.
func BusinessKey(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldBusinessKey, v))
}

// ProcessDefinitionID applies equality check predicate on the "process_definition_id" field. It's identical to ProcessDefinitionIDEQ.
func ProcessDefinitionID(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionKey applies equality check predicate on the "process_definition_key" field. It's identical to ProcessDefinitionKeyEQ.
func ProcessDefinitionKey(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionName applies equality check predicate on the "process_definition_name" field. It's identical to ProcessDefinitionNameEQ.
func ProcessDefinitionName(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionName, v))
}

// ProcessDefinitionVersion applies equality check predicate on the "process_definition_version" field. It's identical to ProcessDefinitionVersionEQ.
func ProcessDefinitionVersion(v int32) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionVersion, v))
}

// DeploymentID applies equality check predicate on the "deployment_id" field. It's identical to DeploymentIDEQ.
func DeploymentID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldDeploymentID, v))
}

// StartUserID applies equality check predicate on the "start_user_id" field. It's identical to StartUserIDEQ.
func StartUserID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldStartUserID, v))
}

// StartTime applies equality check predicate on the "start_time" field. It's identical to StartTimeEQ.
func StartTime(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldStartTime, v))
}

// EndTime applies equality check predicate on the "end_time" field. It's identical to EndTimeEQ.
func EndTime(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldEndTime, v))
}

// Duration applies equality check predicate on the "duration" field. It's identical to DurationEQ.
func Duration(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldDuration, v))
}

// DeleteReason applies equality check predicate on the "delete_reason" field. It's identical to DeleteReasonEQ.
func DeleteReason(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldDeleteReason, v))
}

// SuperProcessInstanceID applies equality check predicate on the "super_process_instance_id" field. It's identical to SuperProcessInstanceIDEQ.
func SuperProcessInstanceID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldSuperProcessInstanceID, v))
}

// RootProcessInstanceID applies equality check predicate on the "root_process_instance_id" field. It's identical to RootProcessInstanceIDEQ.
func RootProcessInstanceID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldRootProcessInstanceID, v))
}

// Suspended applies equality check predicate on the "suspended" field. It's identical to SuspendedEQ.
func Suspended(v bool) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldSuspended, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldTenantID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldName, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldDescription, v))
}

// CallbackID applies equality check predicate on the "callback_id" field. It's identical to CallbackIDEQ.
func CallbackID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCallbackID, v))
}

// CallbackType applies equality check predicate on the "callback_type" field. It's identical to CallbackTypeEQ.
func CallbackType(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCallbackType, v))
}

// ReferenceID applies equality check predicate on the "reference_id" field. It's identical to ReferenceIDEQ.
func ReferenceID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldReferenceID, v))
}

// ReferenceType applies equality check predicate on the "reference_type" field. It's identical to ReferenceTypeEQ.
func ReferenceType(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldReferenceType, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldUpdatedAt, v))
}

// BusinessKeyEQ applies the EQ predicate on the "business_key" field.
func BusinessKeyEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldBusinessKey, v))
}

// BusinessKeyNEQ applies the NEQ predicate on the "business_key" field.
func BusinessKeyNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldBusinessKey, v))
}

// BusinessKeyIn applies the In predicate on the "business_key" field.
func BusinessKeyIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldBusinessKey, vs...))
}

// BusinessKeyNotIn applies the NotIn predicate on the "business_key" field.
func BusinessKeyNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldBusinessKey, vs...))
}

// BusinessKeyGT applies the GT predicate on the "business_key" field.
func BusinessKeyGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldBusinessKey, v))
}

// BusinessKeyGTE applies the GTE predicate on the "business_key" field.
func BusinessKeyGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldBusinessKey, v))
}

// BusinessKeyLT applies the LT predicate on the "business_key" field.
func BusinessKeyLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldBusinessKey, v))
}

// BusinessKeyLTE applies the LTE predicate on the "business_key" field.
func BusinessKeyLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldBusinessKey, v))
}

// BusinessKeyContains applies the Contains predicate on the "business_key" field.
func BusinessKeyContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldBusinessKey, v))
}

// BusinessKeyHasPrefix applies the HasPrefix predicate on the "business_key" field.
func BusinessKeyHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldBusinessKey, v))
}

// BusinessKeyHasSuffix applies the HasSuffix predicate on the "business_key" field.
func BusinessKeyHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldBusinessKey, v))
}

// BusinessKeyIsNil applies the IsNil predicate on the "business_key" field.
func BusinessKeyIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldBusinessKey))
}

// BusinessKeyNotNil applies the NotNil predicate on the "business_key" field.
func BusinessKeyNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldBusinessKey))
}

// BusinessKeyEqualFold applies the EqualFold predicate on the "business_key" field.
func BusinessKeyEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldBusinessKey, v))
}

// BusinessKeyContainsFold applies the ContainsFold predicate on the "business_key" field.
func BusinessKeyContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldBusinessKey, v))
}

// ProcessDefinitionIDEQ applies the EQ predicate on the "process_definition_id" field.
func ProcessDefinitionIDEQ(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDNEQ applies the NEQ predicate on the "process_definition_id" field.
func ProcessDefinitionIDNEQ(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDIn applies the In predicate on the "process_definition_id" field.
func ProcessDefinitionIDIn(vs ...int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldProcessDefinitionID, vs...))
}

// ProcessDefinitionIDNotIn applies the NotIn predicate on the "process_definition_id" field.
func ProcessDefinitionIDNotIn(vs ...int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldProcessDefinitionID, vs...))
}

// ProcessDefinitionIDGT applies the GT predicate on the "process_definition_id" field.
func ProcessDefinitionIDGT(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDGTE applies the GTE predicate on the "process_definition_id" field.
func ProcessDefinitionIDGTE(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDLT applies the LT predicate on the "process_definition_id" field.
func ProcessDefinitionIDLT(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDLTE applies the LTE predicate on the "process_definition_id" field.
func ProcessDefinitionIDLTE(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldProcessDefinitionID, v))
}

// ProcessDefinitionKeyEQ applies the EQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyNEQ applies the NEQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyIn applies the In predicate on the "process_definition_key" field.
func ProcessDefinitionKeyIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyNotIn applies the NotIn predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyGT applies the GT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyGTE applies the GTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLT applies the LT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLTE applies the LTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContains applies the Contains predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasPrefix applies the HasPrefix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasSuffix applies the HasSuffix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyEqualFold applies the EqualFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContainsFold applies the ContainsFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionNameEQ applies the EQ predicate on the "process_definition_name" field.
func ProcessDefinitionNameEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameNEQ applies the NEQ predicate on the "process_definition_name" field.
func ProcessDefinitionNameNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameIn applies the In predicate on the "process_definition_name" field.
func ProcessDefinitionNameIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldProcessDefinitionName, vs...))
}

// ProcessDefinitionNameNotIn applies the NotIn predicate on the "process_definition_name" field.
func ProcessDefinitionNameNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldProcessDefinitionName, vs...))
}

// ProcessDefinitionNameGT applies the GT predicate on the "process_definition_name" field.
func ProcessDefinitionNameGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameGTE applies the GTE predicate on the "process_definition_name" field.
func ProcessDefinitionNameGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameLT applies the LT predicate on the "process_definition_name" field.
func ProcessDefinitionNameLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameLTE applies the LTE predicate on the "process_definition_name" field.
func ProcessDefinitionNameLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameContains applies the Contains predicate on the "process_definition_name" field.
func ProcessDefinitionNameContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameHasPrefix applies the HasPrefix predicate on the "process_definition_name" field.
func ProcessDefinitionNameHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameHasSuffix applies the HasSuffix predicate on the "process_definition_name" field.
func ProcessDefinitionNameHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameIsNil applies the IsNil predicate on the "process_definition_name" field.
func ProcessDefinitionNameIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldProcessDefinitionName))
}

// ProcessDefinitionNameNotNil applies the NotNil predicate on the "process_definition_name" field.
func ProcessDefinitionNameNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldProcessDefinitionName))
}

// ProcessDefinitionNameEqualFold applies the EqualFold predicate on the "process_definition_name" field.
func ProcessDefinitionNameEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldProcessDefinitionName, v))
}

// ProcessDefinitionNameContainsFold applies the ContainsFold predicate on the "process_definition_name" field.
func ProcessDefinitionNameContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldProcessDefinitionName, v))
}

// ProcessDefinitionVersionEQ applies the EQ predicate on the "process_definition_version" field.
func ProcessDefinitionVersionEQ(v int32) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionVersion, v))
}

// ProcessDefinitionVersionNEQ applies the NEQ predicate on the "process_definition_version" field.
func ProcessDefinitionVersionNEQ(v int32) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldProcessDefinitionVersion, v))
}

// ProcessDefinitionVersionIn applies the In predicate on the "process_definition_version" field.
func ProcessDefinitionVersionIn(vs ...int32) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldProcessDefinitionVersion, vs...))
}

// ProcessDefinitionVersionNotIn applies the NotIn predicate on the "process_definition_version" field.
func ProcessDefinitionVersionNotIn(vs ...int32) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldProcessDefinitionVersion, vs...))
}

// ProcessDefinitionVersionGT applies the GT predicate on the "process_definition_version" field.
func ProcessDefinitionVersionGT(v int32) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldProcessDefinitionVersion, v))
}

// ProcessDefinitionVersionGTE applies the GTE predicate on the "process_definition_version" field.
func ProcessDefinitionVersionGTE(v int32) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldProcessDefinitionVersion, v))
}

// ProcessDefinitionVersionLT applies the LT predicate on the "process_definition_version" field.
func ProcessDefinitionVersionLT(v int32) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldProcessDefinitionVersion, v))
}

// ProcessDefinitionVersionLTE applies the LTE predicate on the "process_definition_version" field.
func ProcessDefinitionVersionLTE(v int32) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldProcessDefinitionVersion, v))
}

// DeploymentIDEQ applies the EQ predicate on the "deployment_id" field.
func DeploymentIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldDeploymentID, v))
}

// DeploymentIDNEQ applies the NEQ predicate on the "deployment_id" field.
func DeploymentIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldDeploymentID, v))
}

// DeploymentIDIn applies the In predicate on the "deployment_id" field.
func DeploymentIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldDeploymentID, vs...))
}

// DeploymentIDNotIn applies the NotIn predicate on the "deployment_id" field.
func DeploymentIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldDeploymentID, vs...))
}

// DeploymentIDGT applies the GT predicate on the "deployment_id" field.
func DeploymentIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldDeploymentID, v))
}

// DeploymentIDGTE applies the GTE predicate on the "deployment_id" field.
func DeploymentIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldDeploymentID, v))
}

// DeploymentIDLT applies the LT predicate on the "deployment_id" field.
func DeploymentIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldDeploymentID, v))
}

// DeploymentIDLTE applies the LTE predicate on the "deployment_id" field.
func DeploymentIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldDeploymentID, v))
}

// DeploymentIDContains applies the Contains predicate on the "deployment_id" field.
func DeploymentIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldDeploymentID, v))
}

// DeploymentIDHasPrefix applies the HasPrefix predicate on the "deployment_id" field.
func DeploymentIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldDeploymentID, v))
}

// DeploymentIDHasSuffix applies the HasSuffix predicate on the "deployment_id" field.
func DeploymentIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldDeploymentID, v))
}

// DeploymentIDIsNil applies the IsNil predicate on the "deployment_id" field.
func DeploymentIDIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldDeploymentID))
}

// DeploymentIDNotNil applies the NotNil predicate on the "deployment_id" field.
func DeploymentIDNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldDeploymentID))
}

// DeploymentIDEqualFold applies the EqualFold predicate on the "deployment_id" field.
func DeploymentIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldDeploymentID, v))
}

// DeploymentIDContainsFold applies the ContainsFold predicate on the "deployment_id" field.
func DeploymentIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldDeploymentID, v))
}

// StartUserIDEQ applies the EQ predicate on the "start_user_id" field.
func StartUserIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldStartUserID, v))
}

// StartUserIDNEQ applies the NEQ predicate on the "start_user_id" field.
func StartUserIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldStartUserID, v))
}

// StartUserIDIn applies the In predicate on the "start_user_id" field.
func StartUserIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldStartUserID, vs...))
}

// StartUserIDNotIn applies the NotIn predicate on the "start_user_id" field.
func StartUserIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldStartUserID, vs...))
}

// StartUserIDGT applies the GT predicate on the "start_user_id" field.
func StartUserIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldStartUserID, v))
}

// StartUserIDGTE applies the GTE predicate on the "start_user_id" field.
func StartUserIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldStartUserID, v))
}

// StartUserIDLT applies the LT predicate on the "start_user_id" field.
func StartUserIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldStartUserID, v))
}

// StartUserIDLTE applies the LTE predicate on the "start_user_id" field.
func StartUserIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldStartUserID, v))
}

// StartUserIDContains applies the Contains predicate on the "start_user_id" field.
func StartUserIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldStartUserID, v))
}

// StartUserIDHasPrefix applies the HasPrefix predicate on the "start_user_id" field.
func StartUserIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldStartUserID, v))
}

// StartUserIDHasSuffix applies the HasSuffix predicate on the "start_user_id" field.
func StartUserIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldStartUserID, v))
}

// StartUserIDIsNil applies the IsNil predicate on the "start_user_id" field.
func StartUserIDIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldStartUserID))
}

// StartUserIDNotNil applies the NotNil predicate on the "start_user_id" field.
func StartUserIDNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldStartUserID))
}

// StartUserIDEqualFold applies the EqualFold predicate on the "start_user_id" field.
func StartUserIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldStartUserID, v))
}

// StartUserIDContainsFold applies the ContainsFold predicate on the "start_user_id" field.
func StartUserIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldStartUserID, v))
}

// StartTimeEQ applies the EQ predicate on the "start_time" field.
func StartTimeEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldStartTime, v))
}

// StartTimeNEQ applies the NEQ predicate on the "start_time" field.
func StartTimeNEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldStartTime, v))
}

// StartTimeIn applies the In predicate on the "start_time" field.
func StartTimeIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldStartTime, vs...))
}

// StartTimeNotIn applies the NotIn predicate on the "start_time" field.
func StartTimeNotIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldStartTime, vs...))
}

// StartTimeGT applies the GT predicate on the "start_time" field.
func StartTimeGT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldStartTime, v))
}

// StartTimeGTE applies the GTE predicate on the "start_time" field.
func StartTimeGTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldStartTime, v))
}

// StartTimeLT applies the LT predicate on the "start_time" field.
func StartTimeLT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldStartTime, v))
}

// StartTimeLTE applies the LTE predicate on the "start_time" field.
func StartTimeLTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldStartTime, v))
}

// EndTimeEQ applies the EQ predicate on the "end_time" field.
func EndTimeEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldEndTime, v))
}

// EndTimeNEQ applies the NEQ predicate on the "end_time" field.
func EndTimeNEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldEndTime, v))
}

// EndTimeIn applies the In predicate on the "end_time" field.
func EndTimeIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldEndTime, vs...))
}

// EndTimeNotIn applies the NotIn predicate on the "end_time" field.
func EndTimeNotIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldEndTime, vs...))
}

// EndTimeGT applies the GT predicate on the "end_time" field.
func EndTimeGT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldEndTime, v))
}

// EndTimeGTE applies the GTE predicate on the "end_time" field.
func EndTimeGTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldEndTime, v))
}

// EndTimeLT applies the LT predicate on the "end_time" field.
func EndTimeLT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldEndTime, v))
}

// EndTimeLTE applies the LTE predicate on the "end_time" field.
func EndTimeLTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldEndTime, v))
}

// EndTimeIsNil applies the IsNil predicate on the "end_time" field.
func EndTimeIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldEndTime))
}

// EndTimeNotNil applies the NotNil predicate on the "end_time" field.
func EndTimeNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldEndTime))
}

// DurationEQ applies the EQ predicate on the "duration" field.
func DurationEQ(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldDuration, v))
}

// DurationNEQ applies the NEQ predicate on the "duration" field.
func DurationNEQ(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldDuration, v))
}

// DurationIn applies the In predicate on the "duration" field.
func DurationIn(vs ...int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldDuration, vs...))
}

// DurationNotIn applies the NotIn predicate on the "duration" field.
func DurationNotIn(vs ...int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldDuration, vs...))
}

// DurationGT applies the GT predicate on the "duration" field.
func DurationGT(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldDuration, v))
}

// DurationGTE applies the GTE predicate on the "duration" field.
func DurationGTE(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldDuration, v))
}

// DurationLT applies the LT predicate on the "duration" field.
func DurationLT(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldDuration, v))
}

// DurationLTE applies the LTE predicate on the "duration" field.
func DurationLTE(v int64) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldDuration, v))
}

// DurationIsNil applies the IsNil predicate on the "duration" field.
func DurationIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldDuration))
}

// DurationNotNil applies the NotNil predicate on the "duration" field.
func DurationNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldDuration))
}

// DeleteReasonEQ applies the EQ predicate on the "delete_reason" field.
func DeleteReasonEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldDeleteReason, v))
}

// DeleteReasonNEQ applies the NEQ predicate on the "delete_reason" field.
func DeleteReasonNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldDeleteReason, v))
}

// DeleteReasonIn applies the In predicate on the "delete_reason" field.
func DeleteReasonIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldDeleteReason, vs...))
}

// DeleteReasonNotIn applies the NotIn predicate on the "delete_reason" field.
func DeleteReasonNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldDeleteReason, vs...))
}

// DeleteReasonGT applies the GT predicate on the "delete_reason" field.
func DeleteReasonGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldDeleteReason, v))
}

// DeleteReasonGTE applies the GTE predicate on the "delete_reason" field.
func DeleteReasonGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldDeleteReason, v))
}

// DeleteReasonLT applies the LT predicate on the "delete_reason" field.
func DeleteReasonLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldDeleteReason, v))
}

// DeleteReasonLTE applies the LTE predicate on the "delete_reason" field.
func DeleteReasonLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldDeleteReason, v))
}

// DeleteReasonContains applies the Contains predicate on the "delete_reason" field.
func DeleteReasonContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldDeleteReason, v))
}

// DeleteReasonHasPrefix applies the HasPrefix predicate on the "delete_reason" field.
func DeleteReasonHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldDeleteReason, v))
}

// DeleteReasonHasSuffix applies the HasSuffix predicate on the "delete_reason" field.
func DeleteReasonHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldDeleteReason, v))
}

// DeleteReasonIsNil applies the IsNil predicate on the "delete_reason" field.
func DeleteReasonIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldDeleteReason))
}

// DeleteReasonNotNil applies the NotNil predicate on the "delete_reason" field.
func DeleteReasonNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldDeleteReason))
}

// DeleteReasonEqualFold applies the EqualFold predicate on the "delete_reason" field.
func DeleteReasonEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldDeleteReason, v))
}

// DeleteReasonContainsFold applies the ContainsFold predicate on the "delete_reason" field.
func DeleteReasonContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldDeleteReason, v))
}

// SuperProcessInstanceIDEQ applies the EQ predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDNEQ applies the NEQ predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDIn applies the In predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldSuperProcessInstanceID, vs...))
}

// SuperProcessInstanceIDNotIn applies the NotIn predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldSuperProcessInstanceID, vs...))
}

// SuperProcessInstanceIDGT applies the GT predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDGTE applies the GTE predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDLT applies the LT predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDLTE applies the LTE predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDContains applies the Contains predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDHasPrefix applies the HasPrefix predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDHasSuffix applies the HasSuffix predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDIsNil applies the IsNil predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldSuperProcessInstanceID))
}

// SuperProcessInstanceIDNotNil applies the NotNil predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldSuperProcessInstanceID))
}

// SuperProcessInstanceIDEqualFold applies the EqualFold predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldSuperProcessInstanceID, v))
}

// SuperProcessInstanceIDContainsFold applies the ContainsFold predicate on the "super_process_instance_id" field.
func SuperProcessInstanceIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldSuperProcessInstanceID, v))
}

// RootProcessInstanceIDEQ applies the EQ predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDNEQ applies the NEQ predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDIn applies the In predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldRootProcessInstanceID, vs...))
}

// RootProcessInstanceIDNotIn applies the NotIn predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldRootProcessInstanceID, vs...))
}

// RootProcessInstanceIDGT applies the GT predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDGTE applies the GTE predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDLT applies the LT predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDLTE applies the LTE predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDContains applies the Contains predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDHasPrefix applies the HasPrefix predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDHasSuffix applies the HasSuffix predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDIsNil applies the IsNil predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldRootProcessInstanceID))
}

// RootProcessInstanceIDNotNil applies the NotNil predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldRootProcessInstanceID))
}

// RootProcessInstanceIDEqualFold applies the EqualFold predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDContainsFold applies the ContainsFold predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldRootProcessInstanceID, v))
}

// SuspendedEQ applies the EQ predicate on the "suspended" field.
func SuspendedEQ(v bool) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldSuspended, v))
}

// SuspendedNEQ applies the NEQ predicate on the "suspended" field.
func SuspendedNEQ(v bool) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldSuspended, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldTenantID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldName, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldDescription, v))
}

// CallbackIDEQ applies the EQ predicate on the "callback_id" field.
func CallbackIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCallbackID, v))
}

// CallbackIDNEQ applies the NEQ predicate on the "callback_id" field.
func CallbackIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldCallbackID, v))
}

// CallbackIDIn applies the In predicate on the "callback_id" field.
func CallbackIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldCallbackID, vs...))
}

// CallbackIDNotIn applies the NotIn predicate on the "callback_id" field.
func CallbackIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldCallbackID, vs...))
}

// CallbackIDGT applies the GT predicate on the "callback_id" field.
func CallbackIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldCallbackID, v))
}

// CallbackIDGTE applies the GTE predicate on the "callback_id" field.
func CallbackIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldCallbackID, v))
}

// CallbackIDLT applies the LT predicate on the "callback_id" field.
func CallbackIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldCallbackID, v))
}

// CallbackIDLTE applies the LTE predicate on the "callback_id" field.
func CallbackIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldCallbackID, v))
}

// CallbackIDContains applies the Contains predicate on the "callback_id" field.
func CallbackIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldCallbackID, v))
}

// CallbackIDHasPrefix applies the HasPrefix predicate on the "callback_id" field.
func CallbackIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldCallbackID, v))
}

// CallbackIDHasSuffix applies the HasSuffix predicate on the "callback_id" field.
func CallbackIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldCallbackID, v))
}

// CallbackIDIsNil applies the IsNil predicate on the "callback_id" field.
func CallbackIDIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldCallbackID))
}

// CallbackIDNotNil applies the NotNil predicate on the "callback_id" field.
func CallbackIDNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldCallbackID))
}

// CallbackIDEqualFold applies the EqualFold predicate on the "callback_id" field.
func CallbackIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldCallbackID, v))
}

// CallbackIDContainsFold applies the ContainsFold predicate on the "callback_id" field.
func CallbackIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldCallbackID, v))
}

// CallbackTypeEQ applies the EQ predicate on the "callback_type" field.
func CallbackTypeEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCallbackType, v))
}

// CallbackTypeNEQ applies the NEQ predicate on the "callback_type" field.
func CallbackTypeNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldCallbackType, v))
}

// CallbackTypeIn applies the In predicate on the "callback_type" field.
func CallbackTypeIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldCallbackType, vs...))
}

// CallbackTypeNotIn applies the NotIn predicate on the "callback_type" field.
func CallbackTypeNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldCallbackType, vs...))
}

// CallbackTypeGT applies the GT predicate on the "callback_type" field.
func CallbackTypeGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldCallbackType, v))
}

// CallbackTypeGTE applies the GTE predicate on the "callback_type" field.
func CallbackTypeGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldCallbackType, v))
}

// CallbackTypeLT applies the LT predicate on the "callback_type" field.
func CallbackTypeLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldCallbackType, v))
}

// CallbackTypeLTE applies the LTE predicate on the "callback_type" field.
func CallbackTypeLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldCallbackType, v))
}

// CallbackTypeContains applies the Contains predicate on the "callback_type" field.
func CallbackTypeContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldCallbackType, v))
}

// CallbackTypeHasPrefix applies the HasPrefix predicate on the "callback_type" field.
func CallbackTypeHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldCallbackType, v))
}

// CallbackTypeHasSuffix applies the HasSuffix predicate on the "callback_type" field.
func CallbackTypeHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldCallbackType, v))
}

// CallbackTypeIsNil applies the IsNil predicate on the "callback_type" field.
func CallbackTypeIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldCallbackType))
}

// CallbackTypeNotNil applies the NotNil predicate on the "callback_type" field.
func CallbackTypeNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldCallbackType))
}

// CallbackTypeEqualFold applies the EqualFold predicate on the "callback_type" field.
func CallbackTypeEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldCallbackType, v))
}

// CallbackTypeContainsFold applies the ContainsFold predicate on the "callback_type" field.
func CallbackTypeContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldCallbackType, v))
}

// ReferenceIDEQ applies the EQ predicate on the "reference_id" field.
func ReferenceIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldReferenceID, v))
}

// ReferenceIDNEQ applies the NEQ predicate on the "reference_id" field.
func ReferenceIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldReferenceID, v))
}

// ReferenceIDIn applies the In predicate on the "reference_id" field.
func ReferenceIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldReferenceID, vs...))
}

// ReferenceIDNotIn applies the NotIn predicate on the "reference_id" field.
func ReferenceIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldReferenceID, vs...))
}

// ReferenceIDGT applies the GT predicate on the "reference_id" field.
func ReferenceIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldReferenceID, v))
}

// ReferenceIDGTE applies the GTE predicate on the "reference_id" field.
func ReferenceIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldReferenceID, v))
}

// ReferenceIDLT applies the LT predicate on the "reference_id" field.
func ReferenceIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldReferenceID, v))
}

// ReferenceIDLTE applies the LTE predicate on the "reference_id" field.
func ReferenceIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldReferenceID, v))
}

// ReferenceIDContains applies the Contains predicate on the "reference_id" field.
func ReferenceIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldReferenceID, v))
}

// ReferenceIDHasPrefix applies the HasPrefix predicate on the "reference_id" field.
func ReferenceIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldReferenceID, v))
}

// ReferenceIDHasSuffix applies the HasSuffix predicate on the "reference_id" field.
func ReferenceIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldReferenceID, v))
}

// ReferenceIDIsNil applies the IsNil predicate on the "reference_id" field.
func ReferenceIDIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldReferenceID))
}

// ReferenceIDNotNil applies the NotNil predicate on the "reference_id" field.
func ReferenceIDNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldReferenceID))
}

// ReferenceIDEqualFold applies the EqualFold predicate on the "reference_id" field.
func ReferenceIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldReferenceID, v))
}

// ReferenceIDContainsFold applies the ContainsFold predicate on the "reference_id" field.
func ReferenceIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldReferenceID, v))
}

// ReferenceTypeEQ applies the EQ predicate on the "reference_type" field.
func ReferenceTypeEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldReferenceType, v))
}

// ReferenceTypeNEQ applies the NEQ predicate on the "reference_type" field.
func ReferenceTypeNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldReferenceType, v))
}

// ReferenceTypeIn applies the In predicate on the "reference_type" field.
func ReferenceTypeIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldReferenceType, vs...))
}

// ReferenceTypeNotIn applies the NotIn predicate on the "reference_type" field.
func ReferenceTypeNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldReferenceType, vs...))
}

// ReferenceTypeGT applies the GT predicate on the "reference_type" field.
func ReferenceTypeGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldReferenceType, v))
}

// ReferenceTypeGTE applies the GTE predicate on the "reference_type" field.
func ReferenceTypeGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldReferenceType, v))
}

// ReferenceTypeLT applies the LT predicate on the "reference_type" field.
func ReferenceTypeLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldReferenceType, v))
}

// ReferenceTypeLTE applies the LTE predicate on the "reference_type" field.
func ReferenceTypeLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldReferenceType, v))
}

// ReferenceTypeContains applies the Contains predicate on the "reference_type" field.
func ReferenceTypeContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldReferenceType, v))
}

// ReferenceTypeHasPrefix applies the HasPrefix predicate on the "reference_type" field.
func ReferenceTypeHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldReferenceType, v))
}

// ReferenceTypeHasSuffix applies the HasSuffix predicate on the "reference_type" field.
func ReferenceTypeHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldReferenceType, v))
}

// ReferenceTypeIsNil applies the IsNil predicate on the "reference_type" field.
func ReferenceTypeIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldReferenceType))
}

// ReferenceTypeNotNil applies the NotNil predicate on the "reference_type" field.
func ReferenceTypeNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldReferenceType))
}

// ReferenceTypeEqualFold applies the EqualFold predicate on the "reference_type" field.
func ReferenceTypeEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldReferenceType, v))
}

// ReferenceTypeContainsFold applies the ContainsFold predicate on the "reference_type" field.
func ReferenceTypeContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldReferenceType, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProcessInstance) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProcessInstance) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProcessInstance) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.NotPredicates(p))
}
